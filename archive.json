{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-10-16T01:37:43.799050+00:00",
  "repo": "ietf-rats/draft-deshpande-multi-verifier",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 5,
      "id": "I_kwDON24c9s6ruXiR",
      "title": "Composite Attester definition",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/5",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Composite Device (CD) and Layered Attester (LA) are basic composition patterns.\n\nIf we are introducing a new term, Composite Attester (CA), it may be worth giving it more expressive power than just a handy shorthand for CD _or_ LA.\n\nI suppose we could say that a CA is either a CD, an LA, or any composition involving one or more CDs and/or LAs, and thus have a more useful term in our vocabulary.\n\nAs an example of its use, take a CCA system with a separately attested GPU, exposing a [`ratsd`](https://github.com/veraison/ratsd) endpoint as the lead attester.\n\nThe resulting CA would be a CD made of one LA (the CCA platform and realm) plus a \"singleton\" attester (the GPU).\n\nEven fancier compositions can be imagined in systems spanning multiple physical nodes.",
      "createdAt": "2025-02-26T10:26:28Z",
      "updatedAt": "2025-06-05T08:31:06Z",
      "closedAt": "2025-06-05T08:31:06Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "The definition of CA should also be added to the \"Conventions and Definitions\" section.",
          "createdAt": "2025-02-26T10:36:09Z",
          "updatedAt": "2025-02-26T10:36:09Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Agree that Composite Attester is a new term, so added it in Glossary and used it through out the document!",
          "createdAt": "2025-02-27T15:40:42Z",
          "updatedAt": "2025-02-27T15:40:42Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Commit is linked to the Issue so we can check, whether the commit addresses the concern!",
          "createdAt": "2025-02-28T12:43:14Z",
          "updatedAt": "2025-02-28T12:43:14Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/commit/57a298cb6af3646d9962fd67ffa16cce88b3e2c2\n\nThis is the above commit which precisely addresses this issue. Hence this issue should be closed now!",
          "createdAt": "2025-03-03T12:43:44Z",
          "updatedAt": "2025-03-03T12:43:44Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati Shall we close this now, as we now have the definition?",
          "createdAt": "2025-06-05T08:24:43Z",
          "updatedAt": "2025-06-05T08:24:43Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDON24c9s6rubJI",
      "title": "Is \"sub\" the right term?",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/6",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It says:\n\n> _\"[..] sub-Attester to address the sub-entity\"_\n\n\nWhile I get where this is coming from (i.e., RFC9334's \"Composite Device\"), we want to be able to cover more than just CDs.  Besides, there is not necessarily a hierarchical relationship in the composition which is suggested by \"sub\".\n\nI propose using the term \"component Attester\" instead.",
      "createdAt": "2025-02-26T10:31:03Z",
      "updatedAt": "2025-02-28T12:40:25Z",
      "closedAt": "2025-02-28T12:40:24Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you @thomas-fossati : I have now replaced sub-Attester with Component Attester throughout the document and also added a glossary section making a clear definition for the same!",
          "createdAt": "2025-02-27T15:39:55Z",
          "updatedAt": "2025-02-27T15:39:55Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "We can close this as there is a clear PR to reference the issue fixed!",
          "createdAt": "2025-02-28T12:33:44Z",
          "updatedAt": "2025-02-28T12:33:44Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Not sure you can call it a \"clear PR\", but I am OK to close this.",
          "createdAt": "2025-02-28T12:40:24Z",
          "updatedAt": "2025-02-28T12:40:24Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDON24c9s6rueES",
      "title": "wrong use of \"in tandem\"",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/7",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It says:\n\n> Verifiers need to work in tandem\n\nbut \"in tandem\" means \"_two_ working together\".\n\nSince we are not putting any limitations on the number of Verifiers that are supposed to cooperate, the term is used incorrectly.\n\nI suggest\n\n> Verifiers need to cooperate\n\nor \n\n> Verifiers need to work together\n\n",
      "createdAt": "2025-02-26T10:35:00Z",
      "updatedAt": "2025-02-28T12:43:48Z",
      "closedAt": "2025-02-28T12:43:48Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I asked my lovely tool the meaning of word :\n\nWhat is in tandem means: Here is the reply:\n\nThe phrase \"in tandem\" means **_two or more things_** happening together, simultaneously, or in coordination. \n\n\n",
          "createdAt": "2025-02-27T15:43:32Z",
          "updatedAt": "2025-02-27T15:43:32Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Unsure who or what the \"lovely tool\" is you are referring to :-)\n\nAnyway, my English vocabulary talks specifically about \"two elements working together\".\n\nSo, there is at least some potential confusion which can be avoided by using a more simple term, like \"together\".\n",
          "createdAt": "2025-02-27T16:11:55Z",
          "updatedAt": "2025-02-27T16:11:55Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDON24c9s6ruk5o",
      "title": "problematic 1st para of \"Multi Verifier topological patterns\"",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/8",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The following sentence has a number of issues:\n\n> _\"A composite Attester as per RATS definition has multiple layers. Each layer requires a different set of Verifiers. Hence multi Verifiers work in tandem to appraise a composite Attester.\"_\n\n1. There is no \"RATS definition\" of \"composite Attester\"\n2. Layers exist in layered attester, not in composite devices\n3. A single verifier could handle multiple layers by itself\n4. The conclusion _\"Hence...\"_ is predicated on a set of incomplete/wrong/partially true assumptions.\n5. Use of \"tandem\" is incorrect in this context (see also #7)",
      "createdAt": "2025-02-26T10:44:14Z",
      "updatedAt": "2025-09-26T12:29:37Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed all the issues, @thomas-fossati please check, if we can close this..?",
          "createdAt": "2025-09-26T12:29:37Z",
          "updatedAt": "2025-09-26T12:29:37Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDON24c9s6rutZV",
      "title": "processing of single-signature composite evidence: example of requirement?",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/9",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It says:\n\n> In certain topologies, it is possible that only the Composite Evidence is Signed to provide the overall integrity, while the individual sub-Attester Evidence (example Evidence 1) is not protected. In such cases, the Lead Verifer upon processing of Composite Evidence produce an Attestation Result first, stash the sub-Attester Evidence (example Evidence 1) as unprocessed Evidence, sign the AR and send it to its Verifier (example Verifier 1).\n\nIt is not clear if the described processing is just an example or if it is expected that verifiers will behave like that.",
      "createdAt": "2025-02-26T10:55:22Z",
      "updatedAt": "2025-02-27T17:55:22Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "There are cases, where Evidences (from different RoT) are individually NOT signed but protected by outer signature.\n\nWe need to cater this case also, so just referred to that here.\n\nChanged the Model to wrap individual Evidences in a Signed CMW, instead of in an AR, as it was un-necessary!",
          "createdAt": "2025-02-27T17:55:02Z",
          "updatedAt": "2025-02-27T17:55:02Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in the latest draft!",
          "createdAt": "2025-02-27T17:55:20Z",
          "updatedAt": "2025-02-27T17:55:20Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDON24c9s6ruwUa",
      "title": "Pics overflowing",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/10",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The pics should not exceed 72 columns.",
      "createdAt": "2025-02-26T10:59:21Z",
      "updatedAt": "2025-02-28T09:30:32Z",
      "closedAt": "2025-02-28T09:30:32Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDON24c9s6ru8S_",
      "title": "Comments on the \"Trust Relationships\" section contents",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/11",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The content of the section is pretty confusing.\n\nThe title suggests I could find the description of the trust relationship among the involved actors (attester, front-end verifier and  back-end verifiers), but it contains a mix of security considerations and AR assembly.\n\nThe section should clearly state who needs to trusts who, and to do what, very clearly, maybe even schematically.\n\nCrypto signatures generation and validation, as well as AR assembly and processing are just implementation details.",
      "createdAt": "2025-02-26T11:15:37Z",
      "updatedAt": "2025-02-27T17:53:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed valid comments made by Thomas ",
          "createdAt": "2025-02-27T17:53:11Z",
          "updatedAt": "2025-02-27T17:53:11Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDON24c9s6rw_12",
      "title": "Cascaded pattern description",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/12",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I am unsure about the description of the interaction between verifiers in the cascaded pattern.\n\nOne fundamental high level principle that is not discussed is how the chain is constructed.\nAnother discussion to be had is around exchanged conceptual messages.  RATS require a verifier to consume evidence and produce attestation results.  The \"CE & partial AR\" combo doesn't fit well in that model.\n\nA few clarifications:\n\n1. Why is it necessary to assume that each verifier knows the entire composite attester topology?\n2. Why Is it necessary to assume that the first verifier decodes CE?  (If fact, what does it mean to \"decode CE\"? Is it _complete_ decoding?)\n3. Is it necessary to assume that any verifier can be an equivalent entry point in the verification chain?\n4. How is the subsequent verifier identified?\n5. Is it possible for two or more verifiers in the chain to have overlapping reference values?  If so, is each doing their separate appraisal?\n\n\nNote: CAR may be a term of art already: Ned has used it [in a few places](https://github.com/CCC-Attestation/meetings/blob/main/materials/NedSmith_CAR.pdf) to mean Concise Attestation Result.  I suggest picking a different one to avoid confusion.",
      "createdAt": "2025-02-26T14:10:07Z",
      "updatedAt": "2025-02-27T18:09:31Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am unsure about the description of the interaction between verifiers in the cascaded pattern.\n> \n> One fundamental high level principle that is not discussed is how the chain is constructed. Another discussion to be had is around exchanged conceptual messages. RATS require a verifier to consume evidence and produce attestation results. The \"CE & partial AR\" combo doesn't fit well in that model.\n> \n> A few clarifications:\n> \n> 1. Why is it necessary to assume that each verifier knows the entire composite attester topology?\n>> The reason been, each of the Individual Verifier receives the Composite Evidence(CE). If in absence of this knowledge, will not be possible to decode the CE.\n> 2. Why Is it necessary to assume that the first verifier decodes CE?  (If fact, what does it mean to \"decode CE\"? Is it _complete_ decoding?)\n> > Yes, it means complete decoding to understand,  which relevant part is the one it needs to handle.\n\n> 3. Is it necessary to assume that any verifier can be an equivalent entry point in the verification chain?\n> > Yes, it is required, otherwise, if not described this way, then we fall into a trap of a Lead Verifier, which is not we want to propose.\n\n> 4. How is the subsequent verifier identified?\n> > We need to identify the discovery part, I will riase a github issue to address this..\n\n> 5. Is it possible for two or more verifiers in the chain to have overlapping reference values?  If so, is each doing their separate appraisal? \n> > If they have an Overlapping Reference Values, then both should have it. Still each needs to perform its Own Appraisal.\n\n> 6. > > Note: CAR may be a term of art already: Ned has used it [in a few places](https://github.com/CCC-Attestation/meetings/blob/main/materials/NedSmith_CAR.pdf) to mean Concise Attestation Result. I suggest picking a different one to avoid confusion.\nI agree CAR is already used, suggest me a better word, immediately comes to my mind is TAR --> Total Attestation Results\nOR\n\nJAR --> Joint Attestation Results",
          "createdAt": "2025-02-27T16:49:44Z",
          "updatedAt": "2025-02-27T16:50:32Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I settled on Aggregated Attestation Results ==> AAR, which is the closest as to what we are doing for collecting the Individual Attestation Results! Modified the draft to reflect this! ",
          "createdAt": "2025-02-27T17:02:51Z",
          "updatedAt": "2025-02-27T17:02:51Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "To your point: \n`One fundamental high level principle that is not discussed is how the chain is constructed.\nAnother discussion to be had is around exchanged conceptual messages. RATS require a Verifier to consume evidence and produce attestation results. The \"CE & partial AR\" combo doesn't fit well in that model.`\n\nMy 2 cents:\nI think, RATS is amply clear that RATS Entities can process Conceptual Messages through Conceptual Message Wrapper.\n\nSo the Model assumes that Each Verifier Processes Evidence in a RATS CMW which has a \"Partial AR\" Attached to it.\n\nIt consumes Evidence, then Augments Partial AR and passes the new CMW to the Next Verifier.\n\nThe principal Handled message is Evidence ONLY. It just receives Additional MetaData (alongside Evidence) in a CMW, which is propagated down the chain. I think the model is fair enough and does not break RATS principles to the best of our understanding!",
          "createdAt": "2025-02-27T17:16:08Z",
          "updatedAt": "2025-02-27T17:17:36Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "\n> My 2 cents: I think, RATS is amply clear that RATS Entities can process Conceptual Messages through Conceptual Message Wrapper.\n\nNo, there is no way CMW can be assumed as a universal RATS wrapper.\n\nIf we are assuming a CMW structure, then we must state that explicitly, although I think it's too restrictive.  In fact, EAT/EAR can provide pretty much the same functionality as CMW in this context.  CoEV/CAR too.",
          "createdAt": "2025-02-27T17:51:51Z",
          "updatedAt": "2025-02-27T17:51:51Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "[ restoring quoting direction \ud83d\ude04 ]\n\n> > 1. Why is it necessary to assume that each verifier knows the entire composite attester topology?\n> \n> The reason been, each of the Individual Verifier receives the Composite Evidence(CE). If in absence of this knowledge, will not be possible to decode the CE.\n\nIt doesn't look like a necessity to me.\n\nYou can imagine a CMW (or equivalent wrapper) where each evidence entry in the logical collection has a label that maps unambiguously to a specific \"attestation scheme\" (to use a Veraison term.)\n\nWhat each node in the Verifiers' chain needs to understand is which label to \"de-reference\" to obtain the \"component Evidence\" that it knows how to process.  Once that is done it can replace that label with an equivalent label in the \"AR bucket\" and attach the corresponding AR.\n\nSuch a verifier can be totally blind to all other labels it doesn't know about, i.e., it can completely ignore the global topology and only do its local work.\n\n",
          "createdAt": "2025-02-27T18:00:04Z",
          "updatedAt": "2025-02-27T18:00:04Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> [ restoring quoting direction \ud83d\ude04 ]\n> \n> > > 1. Why is it necessary to assume that each verifier knows the entire composite attester topology?\n> > \n> > \n> > The reason been, each of the Individual Verifier receives the Composite Evidence(CE). If in absence of this knowledge, will not be possible to decode the CE.\n> \n> It doesn't look like a necessity to me.\n> \n> You can imagine a CMW (or equivalent wrapper) where each evidence entry in the logical collection has a label that maps unambiguously to a specific \"attestation scheme\" (to use a Veraison term.)\n> \n> What each node in the Verifiers' chain needs to understand is which label to \"de-reference\" to obtain the \"component Evidence\" that it knows how to process. Once that is done it can replace that label with an equivalent label in the \"AR bucket\" and attach the corresponding AR.\n> \n> Such a verifier can be totally blind to all other labels it doesn't know about, i.e., it can completely ignore the global topology and only do its local work.\n\nTrue that is also a simple collection a possibility, however, can we assume that simplicity to begin with, where the pattern is so simple? I can add a alternative statement that can address your point but largely the entire blob (of Composite Evidence) still flows (whether in a CMW Blob) or whatever.! So the flow is NOT changed, I guess, the decoding aspects does change!\n",
          "createdAt": "2025-02-27T18:09:30Z",
          "updatedAt": "2025-02-27T18:09:30Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDON24c9s6sFnux",
      "title": "An \"Evidence+AR bundle\" conceptual message",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/16",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@junzhanghw suggested modelling each verifier in the cascaded verification pattern as the composition of different roles.\n\n```\n i-th stage             i+1-th stage\n.----------.            .----------.\n|          |            |          |\n| Verifier +--|AAR_i|-->|    RP    |\n|          |            |          |\n+----------+            +----------+\n|          |            |          |\n| Attester +--|CE_i|--->| Verifier |\n|          |            |          |\n'----------'            '----------'\n```\n\nIf we want to split the Evidence+AR bundle into separate RFC9334 conceptual messages while also respecting RFC9334 roles, adjacent cascaded verifiers end up with different assemblies, which is not great.\n\nWe could model each cascaded verifier as a three-faced Janus as follows:\n\n```\n.----------.\n|          |\n|    RP    |\n|          |\n+----------+            .----------.\n|          |            |          |\n| Verifier +--[AAR_i]-->|    RP    +\n|          |            |    |     |\n+----------+            +-[AAR_i]--+              \n|          |            |    |     |              .----------.\n|          |            |    v     |              |          |\n| Attester +--[CE_i]--->| Verifier +--[AAR_i+1]-->|   RP     |\n|          |            |    |     |              |          | \n'----------'            +-[CE_i+1]-+              +--[....]--+\n                        |    |     |              |          |\n                        |    v     |              |          |\n                        | Attester +--[CE_i+1]--->| Verifier |\n                        |          |              |          |\n                        '----------'              '--[....]--'\n                                                  |          |\n                                                  | Attester |\n                                                  |          |\n                                                  '----------'\n```\n\nbut this requires new internal interfaces between roles which need to be specified:\n\n1. RP forwards $$AAR_i$$ to the co-located Verifier\n2. Verifier manipulates $$CE_i$$ to obtain $$CE_{i+1}$$ which is then forwarded to the co-located Attester.\n\nThe RFC9334 aftertaste of this is not good either...\n\nAn alternative is to define a new RATS CM, the \"Evidence+AR bundle\", that is exchanged between adjacent Verifiers.\n\nThe Evidence+AR bundle is the composition of two CMs: $$AAR_i$$ and $$CE_i$$.\n\nAt each stage, the Evidence+AR bundle evolves as follows:\n\n| stage | $$AAR_i$$ | $$CE_i$$ | \n|---|---|---|\n| 1 | $$\\emptyset$$ | $$E_1, \\ldots, E_n$$ |\n| 2 | $$AR_1$$ | $$E_2, \\ldots, E_n$$ |\n| 3 | $$AR_1, AR_2$$ | $$E_3, \\ldots, E_n$$ |\n| i-th | $$AR_1, \\ldots, AR_{i-1}$$ | $$E_i, \\ldots, E_n$$ |\n| n | $$AR_1, \\ldots, AR_n$$ | $$\\emptyset$$ |\n\nWhen one Evidence is appraised it's removed from the $$CE$$ set and a corresponding Attestation Result is added to the $$AAR$$ set. \n\nComposite Evidence and composite Attestation Results are just special cases of this new CM, for $$i=1$$ and $$i=n$$, respectively.",
      "createdAt": "2025-02-28T13:27:20Z",
      "updatedAt": "2025-02-28T16:12:22Z",
      "closedAt": null,
      "comments": [
        {
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati, my understanding of the flow is as follows:\n\n\n```\n i-th stage             i+1-th stage\n.----------.            .----------.\n|          |            |          |\n| Verifier |            | Attester --|EV_(i+1)|--->\n|          |            |          |\n+----------+            +----------+\n|          |            |          |\n| Attester +--|EV_i|--->| Verifier |\n|          |            |          |\n'----------'            '----------'\n'----------'            '----------'\n\nwhere |EV_i| is the augmented evidence that include both original evidence and the [AAR_i]\n",
          "createdAt": "2025-02-28T14:51:42Z",
          "updatedAt": "2025-02-28T14:51:42Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [@thomas-fossati](https://github.com/thomas-fossati), my understanding of the flow is as follows:\n> \n> [snip]\n> \n> where |EV_i| is the augmented evidence that include both original evidence and the [AAR_i]\n\nThis \"augmented evidence\" is a new conceptual message, right?  (We should try to avoid confusion with AR4SI's \"AR-augmented evidence,\" which is a very different thing.)\n\nDo you think it'd materialise in contexts other than cascaded verification?",
          "createdAt": "2025-02-28T15:07:04Z",
          "updatedAt": "2025-02-28T15:07:42Z"
        },
        {
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati ,\n\nI think in our case, the \"augmented evidence\" is an extension of the  AR-augmented Evidence in ar4si. I copy some words from ar4si and modify it for the augmented evidence.\nWhen Verifiers trust each other, there is no need to the PoF between Verifiers. What do you think?\n\n\n   Augmented Evidence:  a bundle of Evidence which includes at least\n      the following:\n\n      1.  Verifier signed Attestation Results.  These Attestation\n          Results must include Identity (sub) Evidence for the (sub-)Attester, a\n          Trustworthiness Vector describing a Verifier's most recent\n          appraisal of an (sub-)Attester, and some Verifier Proof-of-Freshness\n          (PoF).\n\n       2.  Full or partial information from the original evidence. ",
          "createdAt": "2025-02-28T15:19:56Z",
          "updatedAt": "2025-02-28T15:20:15Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [@thomas-fossati](https://github.com/thomas-fossati) ,\n> \n> I think in our case, the \"augmented evidence\" is an extension of the AR-augmented Evidence in ar4si. I copy some words from ar4si and modify it for the augmented evidence. When Verifiers trust each other, there is no need to the PoF between Verifiers. What do you think?\n\nI don't think this would fly.  The key feature of AR-augmented Evidence is that the Evidence and AR blocs in it are statements about the same \"component Attester\", whereas in our case the two blocs are _complementary_ statements about the same \"composite Attester\".",
          "createdAt": "2025-02-28T15:24:07Z",
          "updatedAt": "2025-02-28T15:24:20Z"
        },
        {
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati ,\n\nIn our case, the \"Evidence+AR bundle\" concept has extended the concept of the list of evidence.\n\nIn the original form (of evidence list/evidence of composite device), it is like [ $EV_1$, $EV_2$, ..., $EV_n$, sig($EV_1$, $EV_2$, ..., $EV_n$), PoF]\n\nin the cascade model (or more general ones), it is like\n[ $AR_1$, $AR_2$, ..., $EV_k$, ..., $EV_n$, (optional?) sig($AR_1$, $AR_2$, ..., $EV_n$), (optional?) PoF].\n\nthe mapping from $EV_i$ to $AR_i$ can be regarded as kind of translation such that the raw data in $EV_i$ can be recognized by the latter entity that needs to proceed it. \n\nI like your RP/Verifier/Attester 3-body graph. Maybe we can introduce one more body to pre-process the \"Evidence+AR bundle\", so that RP, Verifier, Attester can still remain their original functions as specified by RFC9334?\n ",
          "createdAt": "2025-02-28T16:02:17Z",
          "updatedAt": "2025-02-28T16:12:22Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDON24c9s61FlAM",
      "title": "Comments/questions about v1",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/19",
      "state": "OPEN",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Please change the name of the draft to a more meaningful one. As someone who has attended the older presentation with the similar title [3] in Dublin, I found it very confusing to see why the story has suddenly changed from load-balancing/single point of failure to functionality-based verifiers.\n\nAnyway, I am not convinced of the use cases presented in multi-verifiers presentation [0] at interim meeting. Some comments/questions below\n\n**Comment on slide 6: containers:**\n\nThe split of verifiers is just an implementation decision. See Sec. III.D.2) in the paper [1]. This is exactly the same as your use case with s/Realm Verifier/Workload Verifier. In my understanding, security should remain whether you have split or separate verifiers. Please give me a very strong motivation on why this needs architectural changes.\n\n**Questions on slide 7: Confidential training use case:**\nI read through the mentioned reference [2] and again this is just an implementation decision. I am not convinced that this needs an architectural change either. Intel sees both Evidences in your case and I don't see any privacy benefit. What is the real benefit of this implementation compared to Intel Trust Authority just fetching the Reference Values and Endorsements from NVIDIA?\nAlso, I have some general questions to understand your real motivation behind presenting this use case:\n\n- Who is the Relying Party here: model owner or data owner?\n- Is AI model and AI application the same?\n- There are so many arrows going here and there. Could you very briefly tell the sequence of those?\n- Could you give me a concrete example of a policy that only NVIDIA can apply and that Intel Trust Authority cannot apply?\n \nThe slide mentions \"Source: Confidential mesh computing (MarbleRun)\" but the hyperlink is broken. Could you share the link and explain how that is relevant?\n\n\n**Editorial comments on draft:**\n\n- Draft is using the terms \"Composite Attester\" and  \"Component Attesters\" before they are defined. \n- I don't see any of the use cases mentioned in the draft. Please add clear explanation of use cases in the draft for the readers to understand the motivation of this work.\n\n\n[0] https://datatracker.ietf.org/meeting/interim-2025-rats-01/materials/slides-interim-2025-rats-01-sessa-ietf-rats-interim-multiverifier-00.pdf\n[1] https://ieeexplore.ieee.org/document/10373038\n[2] https://community.intel.com/t5/Blogs/Products-and-Solutions/Security/Seamless-Attestation-of-Intel-TDX-and-NVIDIA-H100-TEEs-with/post/1525587\n\n[3] https://datatracker.ietf.org/meeting/121/materials/slides-121-rats-handling-multiple-verifiers-in-rats-architecture-01.pdf\n",
      "createdAt": "2025-05-04T17:34:08Z",
      "updatedAt": "2025-09-26T12:28:55Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Motivation section is now added in the Draft, to describe clearly, why this work is important\n\nSecurity Considerations are added as well!",
          "createdAt": "2025-07-03T12:46:58Z",
          "updatedAt": "2025-07-03T12:46:58Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "As clearly stated in the Motivation, which touches some of the real world scene setting, a Composite Device, is made up of Multiple Components which have different Root of Trust,\n\nSuch Root of Trust comes from different Vendors from a different technology, like a CPU and a GPU.\n\nThe Attestation Verification of GPU will be controlled by a GPU Owner, while a CPU Owner will provide the details of a CPU Verification.\n\nAs they are different Root of Trust hence their Verifiers will be different.\n\nWhen they are different, then the question remain:\n\n1. How the Verifiers communicate with each other. Is there a standard way for them to exchange the messages ?\n2. What is the security around the information exchange ?\n3. What is the topology of the lay out ? Is there a need for a Lead Verifier that is mirroring the Lead Attester.\n\n\nAll these aspects are covered in the Motivation of the Draft, so the issue which Usama has raised is covered adequately,\n\n",
          "createdAt": "2025-07-22T20:45:49Z",
          "updatedAt": "2025-07-22T20:45:49Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Standardisation of Message Exchange and Information Flow between multiple Verifiers is essential because:\n\nThis enables inter-operatibility among different Verifiers owned by different Verifier Owners.\n\nIt reduces fragmentation of the eco-system.\n",
          "createdAt": "2025-07-24T10:15:00Z",
          "updatedAt": "2025-07-24T10:15:00Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "NONE",
          "body": "## Summary\nThank you for updating the title, and adding motivation and security considerations sections. In short, only \"Editorial comments\" mentioned in the issue have been addressed. I don't find any concrete answers to my questions in \"Comment on slide 6: containers\" as well as \"Questions on slide 7: Confidential training use case\" on your presentation in Interim. Also, no relevance with MarbleRun has yet been established, which was presented in Interim meeting. \n\nMy main concern is that multiple verifiers will increase security and privacy risks.\n\n## Details\n> Motivation section is now added in the Draft, to describe clearly, why this work is important\n \nUnfortunately, [the section](https://www.ietf.org/archive/id/draft-deshpande-rats-multi-verifier-02.html#section-2) does not address any of the questions raised in the issue above. I would like to see concrete answers to my questions in this issue. The answers need not be addressed in the draft itself; it is fine to answer them here.\n\n> Security Considerations are added as well!\n\nTwo things are being conflated [here](https://www.ietf.org/archive/id/draft-deshpande-rats-multi-verifier-02.html#section-6): I suggest separating the security considerations section from the privacy considerations section.\n\n> As they are different Root of Trust hence their Verifiers will be different.\n\n\"will be\" is a very strong claim, which is what I disagree with. Verifiers _can be_ different, but they need _not necessarily_ be different. I have pointed you to a concrete section in the paper in the issue above for integrated verifiers. \nAdditionally, a co-author in the draft has already backtracked from the claim of \"impossibility\" (see [here](https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/28#issuecomment-3036122280)). If some of the authors still think integrated verifier is impossible, please show me a proof of impossibility. ",
          "createdAt": "2025-07-30T16:06:28Z",
          "updatedAt": "2025-07-30T16:06:28Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Today need for Multiple Verifiers is NOT just an Implementation decision but is a fundamental need as different Root of Trusts means different elements to Verify means different component Verifiers.\n\nWe are not talking about Implementations here, but need to standardise Interfaces when a Composite Attester (A Composite Device or a Layered Attester) needs a Attestation Verification.\n\nEven the practical example given in the Interim, precisely states the same.\n\nSee \nhttps://community.intel.com/t5/Blogs/Products-and-Solutions/Security/Seamless-Attestation-of-Intel-TDX-and-NVIDIA-H100-TEEs-with/post/1525587\n\nHere in the explanation Blue bits needs one Verifier Box and the Green bit need another Verifier.\n\nThey may be co-located (in a single box) or split across geographical boundaries is an Implementation decision.\n\nNobody is arguing on that. What we want to standardize is the Interface, Message Exchange and communication when Different Root of Trusts are Verified by different Verifiers!!\n\nAlso, while we do not want to state that it is Impossible to implement everything using Single Verifier, but a most practical Architecture is the one with multiple Verifiers communicating with one another to Verify Composite Attesters.\n\nWhen Verifiers are more than ONE, then it ought to be standardize the\n1. Topological Patterns\n2. Message Exchange\n3. Security and Privacy Concerns\nThis is what we are aiming to do here!!\n\n",
          "createdAt": "2025-08-15T14:46:13Z",
          "updatedAt": "2025-08-15T14:53:21Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "NONE",
          "body": "Yogesh, sorry but none of that addresses this point [here](https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/19#issuecomment-3136961143): \n\n> I don't find any concrete answers to my questions in \"Comment on slide 6: containers\" as well as \"Questions on slide 7: Confidential training use case\" on your presentation in Interim. Also, no relevance with MarbleRun has yet been established, which was presented in Interim meeting.\n>\n> My main concern is that multiple verifiers will increase security and privacy risks.\n\nI need concrete answers to my questions to proceed this discussion. ",
          "createdAt": "2025-08-18T21:20:55Z",
          "updatedAt": "2025-08-18T21:20:55Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@muhammad-usama-sardar : Please see the response below:\n\nQuestions on slide 7: Confidential training use case:\nI read through the mentioned reference [2] and again this is just an implementation decision. I am not convinced that this needs an architectural change either. Intel sees both Evidences in your case and I don't see any privacy benefit. What is the real benefit of this implementation compared to Intel Trust Authority just fetching the Reference Values and Endorsements from NVIDIA?\n\n* YD: The real benefit lies in delegation of responsibility and standardising the interfaces to such delegation. To explain in simple terms, imagine, as per your definition Usama, Intel TDX ends up building a Verifier for logic for NVDIA GPU. Tomorrow, one more player comes to the market in place of NVDIA, then what is the story, Intel ends up integrating the same inside its own Verifier ? \nHow will this situation scale if 10 GPUs are in the market ..? Will this decision which you are strongly enforcing survive? And remember each one of the GPU Verifiers have their own Policies for Verification: see RFC 9334, Appraisal Policies for Evidence), in addition to just Reference Values, which may or may not be necessarily public that truly depends on the use case? \nExample, for certain Military, Defence and Medical use cases, one may not wish to reveal policy/reference values for Verification.\n\nIf we do not standardize the interfaces, then Intel TDX Verifier will have a different Communication interface to NVIDIA GPU Verifier, tomorrow some X GPU Verifier comes in the market, then Intel TDX Verifiers will have different interfaces and messages to Implement for Verifier X.\n\nThe eco-system will be very fragmented for such communication.\n\nThat is the reason why Topology, interfaces and message exchange need to be standardised.\n\nAlso, I have some general questions to understand your real motivation behind presenting this use case:\n\nWho is the Relying Party here: model owner or data owner?\nYD: Model Owner and Data Owner both are Relying parties.\nModel owner owns the code and is relying on Trustworthy execution of its code\nData Owner owns the data and wants to ensure correct Data in Use Security Guarantees before revealing its Data.\n\nIs AI model and AI application the same?\nAI Application is a general term, which implies ML Model Code using the Data to produce Inference output\n\nThere are so many arrows going here and there. Could you very briefly tell the sequence of those?\nI think, I explained the sequence to you, in our 1:1 Conversation.\n\nCould you give me a concrete example of a policy that only NVIDIA can apply and that Intel Trust Authority cannot apply?\nIf you see the picture for the distributed model, NRAS has its own policy box and Intel Trust Authority has its own policy box.\n\nOne Concrete example could be that for Certain NVDIA GPUs which are of specific Hardware Revision, specific claim may be skipped for Verification, like when HW revision is V2.0.0, skip the FW Revision, but for HW Revision V3.0.0 expect additional verification to be applied.\n\nThe slide mentions \"Source: Confidential mesh computing (MarbleRun)\" but the hyperlink is broken. Could you share the link and explain how that is relevant?\nWe are working on explaining this use case as well, possibly in the next interim\n",
          "createdAt": "2025-08-19T08:54:24Z",
          "updatedAt": "2025-08-19T08:54:24Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@muhammad-usama-sardar Please feel free to ask more questions, if still some aspects are not clear to you...",
          "createdAt": "2025-08-19T08:54:51Z",
          "updatedAt": "2025-08-19T08:54:51Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "NONE",
          "body": "As a reminder, no answer has yet been provided for this part:\n> Comment on slide 6: containers:\n\n---\n>> Questions on slide 7: Confidential training use case: I read through the mentioned reference [2] and again this is just an implementation decision. I am not convinced that this needs an architectural change either. Intel sees both Evidences in your case and I don't see any privacy benefit. What is the real benefit of this implementation compared to Intel Trust Authority just fetching the Reference Values and Endorsements from NVIDIA?\n> * YD: The real benefit lies in delegation of responsibility and standardising the interfaces to such delegation. To explain in simple terms, imagine, as per your definition Usama, Intel TDX ends up building a Verifier for logic for NVDIA GPU. Tomorrow, one more player comes to the market in place of NVDIA, then what is the story, Intel ends up integrating the same inside its own Verifier ?\n\nNothing changes in the story for the \"new player\". The verifier will just have to fetch the Reference Values and Endorsements from the new player. That's it.\n\n>   Example, for certain Military, Defence and Medical use cases, one may not wish to reveal policy/reference values for Verification.\n\nI don't really understand this. I think you are mixing different things here. Reference Values for what? Policy for what? Could you explain more concretely how having multiple verifiers is better for - let's say - military use case? \n\nI think such use cases should make use of on-premises verifier using Intel DCAP and NVIDIA nvtrust.\n\n> > Is AI model and AI application the same? \n>\n> AI Application is a general term, which implies ML Model Code using the Data to produce Inference output\n>\n\nI don't understand this. The use case is \"confidential training.\" What has \"inference\" got to do here? \n> > There are so many arrows going here and there. Could you very briefly tell the sequence of those? \n>\n> I think, I explained the sequence to you, in our 1:1 Conversation.\n\nMaybe. It's been a few months. In any case, please summarize in 2-3 sentences for transparency for WG.\n> \n> > Could you give me a concrete example of a policy that only NVIDIA can apply and that Intel Trust Authority cannot apply? \n>\n> If you see the picture for the distributed model, NRAS has its own policy box and Intel Trust Authority has its own policy box.\n> \n\nso what? This was completely irrelevant to my question. \n> One Concrete example could be that for Certain NVDIA GPUs which are of specific Hardware Revision, specific claim may be skipped for Verification, like when HW revision is V2.0.0, skip the FW Revision, but for HW Revision V3.0.0 expect additional verification to be applied.\n\nI don't see any reason why Intel (or anyone developing a verifier) would not be able to apply this. \n\n---\n>> The slide mentions \"Source: Confidential mesh computing (MarbleRun)\" but the hyperlink is broken. Could you share the link and explain how that is relevant?\n>\n> We are working on explaining this use case as well, possibly in the next interim\n\nOk, thanks.",
          "createdAt": "2025-08-31T18:27:43Z",
          "updatedAt": "2025-08-31T18:27:43Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> As a reminder, no answer has yet been provided for this part:\n> \n> > Comment on slide 6: containers:\n> \n> > > Questions on slide 7: Confidential training use case: I read through the mentioned reference [2] and again this is just an implementation decision. I am not convinced that this needs an architectural change either. Intel sees both Evidences in your case and I don't see any privacy benefit. What is the real benefit of this implementation compared to Intel Trust Authority just fetching the Reference Values and Endorsements from NVIDIA?\n> > \n> > \n> > \n> > * YD: The real benefit lies in delegation of responsibility and standardising the interfaces to such delegation. To explain in simple terms, imagine, as per your definition Usama, Intel TDX ends up building a Verifier for logic for NVDIA GPU. Tomorrow, one more player comes to the market in place of NVDIA, then what is the story, Intel ends up integrating the same inside its own Verifier ?\n> \n> Nothing changes in the story for the \"new player\". The verifier will just have to fetch the Reference Values and Endorsements from the new player. That's it.\n>>> @muhammad-usama-sardar: This solution will NOT simply scale.. Verification is NOT simply fetching reference values, A Verifier has to build a logic of Comparison of Reference Values with the the Claims from Evidence AND Apply the Policy.\n\nClaims for each RoT are different and so is the Reference Values and so is the Policy..\n\nIt is simply not a practical solution to build a Monolithic Verifier that satisfies every Root of Trust Verification.\nNot sure why you do not understand this ??\n> \n> > Example, for certain Military, Defence and Medical use cases, one may not wish to reveal policy/reference values for Verification.\n> \n> I don't really understand this. I think you are mixing different things here. Reference Values for what? Policy for what? Could you explain more concretely how having multiple verifiers is better for - let's say - military use case?\n\nHere is more help for you:\n\nFor example: Let us say, Vendor-X is  building a specialised military hardware call it `Component-M` with its Own Root of Trust. Vendor-X have Reference Values for its Verification and Vendor-X has its own policy  of Verification for each Hardware Class, to another Hardware Class of `Component-M`\nVendor X does not wish to reveal to outside world in Open how it Verifies One Class - A of HW versus how it Verifies Class-B Hardware of `Component-M`\nWhat policies its applies when  it does Attestation Verification of `Component-M`\n\nI am just giving an example, when this Composite Evidence is received by a Lead Verifier, it does not know, how to perform attestation Verification of  the `Component-M`. It delegates the responsibility of its Verification to Vendor -X built Verification Service for `Component-M`\n\n> \n> I think such use cases should make use of on-premises verifier using Intel DCAP and NVIDIA nvtrust.\nCorrect, but On Prem Verifier for Intel will do Verification of Intel and NVDIA will do its own Verification.\nThey need to talk to each other for a Combined Evidence Verification!\n> \n> > > Is AI model and AI application the same?\n> > \n> > \n> > AI Application is a general term, which implies ML Model Code using the Data to produce Inference output\n> \n> I don't understand this. The use case is \"confidential training.\" What has \"inference\" got to do here?\n> YD: Sorry I meant Confidential Training. So it is the Training Output NOT Inference Output..\n\n> > > There are so many arrows going here and there. Could you very briefly tell the sequence of those?\n> > \n> > \n> > I think, I explained the sequence to you, in our 1:1 Conversation.\n> \n> Maybe. It's been a few months. In any case, please summarize in 2-3 sentences for transparency for WG.\n> \n> > > Could you give me a concrete example of a policy that only NVIDIA can apply and that Intel Trust Authority cannot apply?\n> > \n> > \n> > If you see the picture for the distributed model, NRAS has its own policy box and Intel Trust Authority has its own policy box.\n> \n> so what? This was completely irrelevant to my question.\nWHY, I explained how policies may differ, in my original answer seqeunce.\n> \n> > One Concrete example could be that for Certain NVDIA GPUs which are of specific Hardware Revision, specific claim may be skipped for Verification, like when HW revision is V2.0.0, skip the FW Revision, but for HW Revision V3.0.0 expect additional verification to be applied.\n> \n> I don't see any reason why Intel (or anyone developing a verifier) would not be able to apply this.\nNVIDIA May not want to reveal everything about its policies to Intel. \n> \n> > > The slide mentions \"Source: Confidential mesh computing (MarbleRun)\" but the hyperlink is broken. Could you share the link and explain how that is relevant?\n> > \n> > \n> > We are working on explaining this use case as well, possibly in the next interim\n> \n> Ok, thanks.\n\n",
          "createdAt": "2025-09-03T09:47:54Z",
          "updatedAt": "2025-09-03T09:47:54Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > As a reminder, no answer has yet been provided for this part:\n> > > Comment on slide 6: containers:\n> > \n> > \n> > > > Questions on slide 7: Confidential training use case: I read through the mentioned reference [2] and again this is just an implementation decision. I am not convinced that this needs an architectural change either. Intel sees both Evidences in your case and I don't see any privacy benefit. What is the real benefit of this implementation compared to Intel Trust Authority just fetching the Reference Values and Endorsements from NVIDIA?\n> > > \n> > > \n> > > \n> > > * YD: The real benefit lies in delegation of responsibility and standardising the interfaces to such delegation. To explain in simple terms, imagine, as per your definition Usama, Intel TDX ends up building a Verifier for logic for NVDIA GPU. Tomorrow, one more player comes to the market in place of NVDIA, then what is the story, Intel ends up integrating the same inside its own Verifier ?\n> > \n> > \n> > Nothing changes in the story for the \"new player\". The verifier will just have to fetch the Reference Values and Endorsements from the new player. That's it.\n> > > > [@muhammad-usama-sardar](https://github.com/muhammad-usama-sardar): This solution will NOT simply scale.. Verification is NOT simply fetching reference values, A Verifier has to build a logic of Comparison of Reference Values with the the Claims from Evidence AND Apply the Policy.\n> \n> Claims for each RoT are different and so is the Reference Values and so is the Policy..\n> \n> It is simply not a practical solution to build a Monolithic Verifier that satisfies every Root of Trust Verification. Not sure why you do not understand this ??\n> \n> > > Example, for certain Military, Defence and Medical use cases, one may not wish to reveal policy/reference values for Verification.\n> > \n> > \n> > I don't really understand this. I think you are mixing different things here. Reference Values for what? Policy for what? Could you explain more concretely how having multiple verifiers is better for - let's say - military use case?\n> \n> Here is more help for you:\n> \n> For example: Let us say, Vendor-X is building a specialised military hardware call it `Component-M` with its Own Root of Trust. Vendor-X have Reference Values for its Verification and Vendor-X has its own policy of Verification for each Hardware Class, to another Hardware Class of `Component-M` Vendor X does not wish to reveal to outside world in Open how it Verifies One Class - A of HW versus how it Verifies Class-B Hardware of `Component-M` What policies its applies when it does Attestation Verification of `Component-M`\n> \n> I am just giving an example, when this Composite Evidence is received by a Lead Verifier, it does not know, how to perform attestation Verification of the `Component-M`. It delegates the responsibility of its Verification to Vendor -X built Verification Service for `Component-M`\n> \n> > I think such use cases should make use of on-premises verifier using Intel DCAP and NVIDIA nvtrust.\n> > Correct, but On Prem Verifier for Intel will do Verification of Intel and NVDIA will do its own Verification.\n> > They need to talk to each other for a Combined Evidence Verification!\n> > > > Is AI model and AI application the same?\n> > > \n> > > \n> > > AI Application is a general term, which implies ML Model Code using the Data to produce Inference output\n> > \n> > \n> > I don't understand this. The use case is \"confidential training.\" What has \"inference\" got to do here?\n> > YD: Sorry I meant Confidential Training. So it is the Training Output NOT Inference Output..\n> \n> > > > There are so many arrows going here and there. Could you very briefly tell the sequence of those?\n> > > \n> > > \n> > > I think, I explained the sequence to you, in our 1:1 Conversation.\n> > \n> > \n> > Maybe. It's been a few months. In any case, please summarize in 2-3 sentences for transparency for WG.\n> > > > Could you give me a concrete example of a policy that only NVIDIA can apply and that Intel Trust Authority cannot apply?\n> > > \n> > > \n> > > If you see the picture for the distributed model, NRAS has its own policy box and Intel Trust Authority has its own policy box.\n> > \n> > \n> > so what? This was completely irrelevant to my question.\n> > WHY, I explained how policies may differ, in my original answer seqeunce.\n> > > One Concrete example could be that for Certain NVDIA GPUs which are of specific Hardware Revision, specific claim may be skipped for Verification, like when HW revision is V2.0.0, skip the FW Revision, but for HW Revision V3.0.0 expect additional verification to be applied.\n> > \n> > \n> > I don't see any reason why Intel (or anyone developing a verifier) would not be able to apply this.\n> > NVIDIA May not want to reveal everything about its policies to Intel.\n> > > > The slide mentions \"Source: Confidential mesh computing (MarbleRun)\" but the hyperlink is broken. Could you share the link and explain how that is relevant?\n> > > \n> > > \n> > > We are working on explaining this use case as well, possibly in the next interim\n> > \n> > \n> > Ok, thanks.\n\nAs a Reminder, All questions are explained properly.\n\nAnyone with little understanding of Remote Attestation can understand the explanation!!!",
          "createdAt": "2025-09-03T09:49:01Z",
          "updatedAt": "2025-09-03T09:49:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "PR #31 Adds the Reference Use cases to the repository!",
          "createdAt": "2025-09-26T12:28:55Z",
          "updatedAt": "2025-09-26T12:28:55Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDON24c9s61mYFV",
      "title": "[RATS] Multi Verifier: Need to clearly document the Motivation behind this draft",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/20",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The draft in its current state is unable to clearly document, what  problem the draft is aiming to solve or alternatively what is the motivation.\n\nIn the next revision this needs to be addressed..\n\n\n\n",
      "createdAt": "2025-05-07T17:47:24Z",
      "updatedAt": "2025-06-13T09:50:25Z",
      "closedAt": "2025-06-13T09:50:25Z",
      "comments": []
    },
    {
      "number": 21,
      "id": "I_kwDON24c9s61mcTI",
      "title": "[RATS MultiVerifier] Introduce real world use cases that connects with the problem statement",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/21",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Introduce real world use cases, that could assist readers to connect with the problem..",
      "createdAt": "2025-05-07T17:54:22Z",
      "updatedAt": "2025-09-26T12:28:10Z",
      "closedAt": "2025-09-26T12:28:10Z",
      "comments": [
        {
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "body": "in current stage, i think the examples listed in the motivation part is sufficient. we can discuss them with others in the side meeting.",
          "createdAt": "2025-07-04T12:45:07Z",
          "updatedAt": "2025-07-04T12:45:07Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "PR #31 closes this gap!",
          "createdAt": "2025-09-26T12:28:10Z",
          "updatedAt": "2025-09-26T12:28:10Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDON24c9s61mha_",
      "title": "[RATS MultiVerifier]: Consider renaming the work, as it is colliding with previous work on this topic.",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/22",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We will discuss this aspect in the design team meeting, and then proceed accordingly!",
      "createdAt": "2025-05-07T18:02:34Z",
      "updatedAt": "2025-07-03T14:06:32Z",
      "closedAt": "2025-07-03T14:06:32Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved with a new name!",
          "createdAt": "2025-07-03T14:06:32Z",
          "updatedAt": "2025-07-03T14:06:32Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "I_kwDON24c9s6-udXd",
      "title": "Proof of impossibility for single (integrated) Verifier",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/28",
      "state": "OPEN",
      "author": "muhammad-usama-sardar",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Quoting from [ML discussion](https://mailarchive.ietf.org/arch/msg/rats/anHLCJKenTz9bUfmaZf8hsy4hqg/) following interim:\n\n> For Complex Attesters as defined below:\n> \n>   1.  Either a Layered Attester (RATS)\n>   2.  Composite Device (RATS)\n>   3.  Or a combination of both!\n> \n> It is **NOT possible** for a single Verifier to completely appraise such Evidence, hence the need for multiple Verifiers to work in a coordinated manner.\n\nSee the counterexample I presented [here](https://mailarchive.ietf.org/arch/msg/rats/Ik1tESUaEq792ypyPtSvOn1LHSI/). I would like to see the proof of impossibility. ",
      "createdAt": "2025-07-03T15:48:03Z",
      "updatedAt": "2025-07-22T20:39:17Z",
      "closedAt": null,
      "comments": [
        {
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "body": "In this latest version, we have removed the argument to say that is not possible for a single verifier to do the appraisal. You can check the section 2 to see the update of the motivation. ",
          "createdAt": "2025-07-04T12:43:42Z",
          "updatedAt": "2025-07-04T12:43:42Z"
        },
        {
          "author": "muhammad-usama-sardar",
          "authorAssociation": "NONE",
          "body": "Thank you Jun. I will wait for the new version to be published just to double-check and then close the issue. ",
          "createdAt": "2025-07-04T14:33:57Z",
          "updatedAt": "2025-07-04T14:33:57Z"
        },
        {
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "body": "the version 02 now is available in https://datatracker.ietf.org/doc/draft-deshpande-rats-multi-verifier/ @muhammad-usama-sardar ",
          "createdAt": "2025-07-07T12:38:04Z",
          "updatedAt": "2025-07-07T12:38:04Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed, the heterogeneity of the different Root of Trust demands different Verifiers to appraise part of the Component Evidence,\n\nHence we need Multiple Verifiers to realise this.\n\nWhen we need Multiple Verifiers, then it becomes very important to standardize:\n\n1. A standard based protocol to communicate among the Verifiers\n2. What Messages they exchange ?\n3. What is the Security around the exchanged messages\n\n\nThe work in IETF will attempt to standardize 1,2,3 above so that uniformity in attestation system can be accomplished..\n",
          "createdAt": "2025-07-22T20:39:17Z",
          "updatedAt": "2025-07-22T20:39:17Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDON24c9s7Ehm_2",
      "title": "Ghada A: Review Comments",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/30",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\n\nThe draft flows well and I support this topic. Here is a couple of comments:\n\nGeneral comments:\nA use case section would be helpful to motivate the work. Also, a well-defined and founded trust model is needed.\n\nIndependently of the pattern, to compute an Aggregated Result, you need all the verifiers to send their partial AR / AR. What do you do if a verifier does not answer?  \n\n\n\n[Fig 1 :] \n\n-\tHow to select the right verifier for component evidence ? \n\n-\tVerifiers do they have knowledge of the existence of other verifiers? \n\n-\tThe Lead verifier to whom does he belong? \n\n\n[Page 7]:\n\n\u201cIf the Composite Attestation Evidence is\nsigned, then it validates the integrity of the Evidence by validating\n   the signature. \u201d\n\nGA>> if there is composite evidence, I assume that \n-\tthere is a \u201ccomposite signature\u201d. Concretely, something like aggregate signatures. To verify this kind of signatures, the lead verifier needs to have access to the public key of all the components (who participated to the composite evidence and so to the signature).   \nIs that something acceptable in your trust model? \n\n\n\u201cLead Verifier has the knowledge about the overall structure of the\n      Composite Evidence\n\u201d\nGA>> but in the introduction, you motivated the document by the fact that in complex and changing environment it is hard to have just one verifier?  For me this assumes that the Lead verifier may not have an overall structure of the composite Attester.\n\n\u201cIt decodes the Composite Evidence to extract\n      the Component Attester Evidence\n\u201d\nGA>> extracting means that composite evidence and evidence X are different. This excludes solutions where the Lead verifier forwards the composite evidence with some auxiliary data to enable the verifier X to do the check of evidence X. I would say It decodes the composite evidence to derive the component Attester Evidence\u201d\n\n\u201c4.1.3.  Trust Relationships\nIn this topology the Lead Verifier is fully trusted by Component\n   Attester Verifiers (example Verifier 1).\n\u201d\nGA>> This assumes that the Lead verifier and the component verifier belongs to the same entity. Is that true? Otherwise, it is a very strong assumption that you may need to revise. Actually, it will strongly depend on the use case. You also should specify what does imply \u201cfully trusted\u201d / \u201ctrusted\u201d. \n\n\u201cLead Verifier is provisioned with the Trust Anchors\n   for Verifier 1..N. \u00bb\n\nGA>> what do you mean by \u201cprovisioned\u201d? normally a trust Anchor is not a sharable data. It should be private and kept secure within its owner.\n\n[Page 8]\n\n\u201cVerifiers are cascaded to perform the Attestation\n   Appraisal.\n\u201d\n\nGA>> Who decides the order in the chain? Is the order important? \n\n\u201cEach Verifier in the chain possess the knowledge of the\n   entire Composite Attester topology.\n\u201d\nGA>> why?  A verifier needs only to know how to derive / extract / retrieve its associated evidence. \n\n\u201cThe Verifier which processes the\n   Composite Evidence, Verifies the signature on the Evidence, if\n   present.\n\u201d\nGA>> again, this implies some assumptions, e.g., the credentials to verify the signature. Also, this verifier needs to inform the following verifiers that he properly checked the signature? Or this verification is going to be repeated by all the verifiers? \n\n\u201cIt decodes the Composite Evidence performs Appraisal of the\n   Component Attester whose Reference Values and Endorsements are in its\n  database.\n\u201d\nGA>> Here also, this assumes that the verifier knows how to retrieve its associated evidence.  This could be done either by using an external entity (e.g., verifier owner) and / or by introducing some data, in the CE, specific to each verifier/ component. \n\n[Page 9]\n\n\u201cAs shown in the picture, the partial results and Combined Evidence is\n   transmitted to a chain of Verifier, till the Appraisal is complete.\n   The Verifier combines the incoming partial results, combines the\n   results from it own Evidence Appraisal and passes the Aggregated\n   Attestation Results to the Verifier from which it receives Combined\n   Evidence.\n\u201d\nGA>> this scenario assumes that the aggregation of the results is done at the first flow \u201cfrom attester to Verifier N\u201d.  This may imply an important delay. Instead, you can think about transmitting the CE across all the chain and the aggregation of the results occurs when a verifier receives a partial AR. This will enable verifiers to compute their corresponding AR almost at the same time\u2026 BUT this option does not work if the partial AR of verifier N depends on partial AR of verifier N-1. \n\n\n\u201c   In the cascaded pattern, the communicating Verifiers fully trust each\n   other.\n\u201d\nGA>> you don\u2019t need this. Why? \n\n\u201cEach Verifier has the trust anchor for the Verifier it is\n   communicating to (i.e. either sending information or receiving\n   information)\n\u201d\nGA>> can you explain what do you mean by has the trust anchor?\n\n\u201cHence RP fully trusts all the\n   Verifiers.\n\u201d\nGA>> when you say X trusts Y. Can you explain what does this imply? It could be useful to have concrete examples.\n\n\u201c4.3.  Hybrid Pattern\u201d \n\nGA>> for every Pattern, it would be useful to have a concrete example / use case. \n \n Page 10\n\n\u201c5.  Freshness\n\u201d\nGA>> this will work if you consider the current trust model (all trusts all) but if you will revise it. I think the freshness should be checked by every verifier in all patterns. \n\n\u201c   The Verifier is effectively part of the Attesters' and Relying\n   Parties' trusted computing base (TCB).\n\u201d\nGA>> why? \n\nPage 11\n\n\u201c  there might be a need for confidentiality protection of the\n       individual Evidence from Lead Verifier to sub Verifiers.\n\u201d\nGA>> I would even say that confidentiality should be from Attester to sub-verifier. \n\n\u201c\n   2.  The Verfier always communicates with a known Verifier in the\n       chain.  Hence it only maintains the trust roots for its\n       communicating Verifier.\n\u201d\nGA>> it does not work because you previously said that the Attester choose a random verifier to start the verification. This implies that the first verifier may not be the same all the time. This also implies that the chain may change which implies that the neighbors also may change.  This will bring us to the first option: all verifiers know each other, or you can also define a set of neighbors that know each other. \n",
      "createdAt": "2025-08-06T15:22:51Z",
      "updatedAt": "2025-09-26T07:26:42Z",
      "closedAt": null,
      "comments": [
        {
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "body": "Here are some answers from my perspective that shared in IETF RATS WG mailing list in August:\n\nQ1:  Independently of the pattern, to compute an Aggregated Result, you need all the verifiers to send their partial AR / AR. What do you do if a verifier does not answer?  \nA1: This is very similar to the case of information aggregation in sensor networks. One way to address this situation is to add the redundancy in (sub) Verifiers to reduce the chance that certain Verifier does not answer. Basically, it is also same as the single Verifier case. If one Verifier does not answer, the relying party cannot judge whether one attester is trustworthy or not (so it might query another Verifier). The detail design for this part will be our future consideration.\n\nQ2:  [Fig 1 :] \n\n-\tHow to select the right verifier for component evidence ? \n\n-\tVerifiers do they have knowledge of the existence of other verifiers? \n\n-\tThe Lead verifier to whom does he belong? \n\nA2: One way is to config the Lead Verifier, so that it knows which sub-Verifier to contact when it knows the format/head of the sub-Evidences. In the hierarchical model, there is no need for (sub)Verifiers know each other, because they do not interact with each other. The Lead Verifier itself does not necessary need to implement the appraisal logic, so it can act similar to proxy (like skyscanner, google flight) to contact the real Verifiers (like airfrance, Finnair). So it can be a third-party, or certain service that can prove itself really do its job as requested. \n\n\n\nQ3: [Page 7]:\n\n\u201cIf the Composite Attestation Evidence is\nsigned, then it validates the integrity of the Evidence by validating\n   the signature. \u201d\n\nGA>> if there is composite evidence, I assume that \n-\tthere is a \u201ccomposite signature\u201d. Concretely, something like aggregate signatures. To verify this kind of signatures, the lead verifier needs to have access to the public key of all the components (who participated to the composite evidence and so to the signature).   \nIs that something acceptable in your trust model? \n\nA3:  At the moment, we consider the case that each sub-Evidence has its own signature, and the overall Evidence has one signature also. Then in such a case, the lead Verifier only needs to have the public key of the lead Attester. The case for the aggregate signature will be our future consideration. \n\n\nQ4: \u201cLead Verifier has the knowledge about the overall structure of the\n      Composite Evidence\n\u201d\nGA>> but in the introduction, you motivated the document by the fact that in complex and changing environment it is hard to have just one verifier?  For me this assumes that the Lead verifier may not have an overall structure of the composite Attester.\n\n\nA4:  In this case, the lead Verifier does not have the knowledge (golden measurement) to do the appraisal by itself, but it has the knowledge to dispatch the appraisal jobs to the right sub-Verifiers.  \n\n\nQ5: \u201cIt decodes the Composite Evidence to extract\n      the Component Attester Evidence\n\u201d\nGA>> extracting means that composite evidence and evidence X are different. This excludes solutions where the Lead verifier forwards the composite evidence with some auxiliary data to enable the verifier X to do the check of evidence X. I would say It decodes the composite evidence to derive the component Attester Evidence\u201d\n\nA5: The solutions that you have suggested are also interesting, which deserves more discussion. \n\n\nQ6: \u201c4.1.3.  Trust Relationships\nIn this topology the Lead Verifier is fully trusted by Component\n   Attester Verifiers (example Verifier 1).\n\u201d\nGA>> This assumes that the Lead verifier and the component verifier belongs to the same entity. Is that true? Otherwise, it is a very strong assumption that you may need to revise. Actually, it will strongly depend on the use case. You also should specify what does imply \u201cfully trusted\u201d / \u201ctrusted\u201d. \n\nA6: The lead Verifier does not necessary belong to the same entity with the component Verifier, but one role that can be trusted both by the Attester and the component Verifiers.    Currently we have listed certain options and I agree certain more specification will make it more clear. \n\n\nQ7: \u201cLead Verifier is provisioned with the Trust Anchors\n   for Verifier 1..N. \u00bb\n\nGA>> what do you mean by \u201cprovisioned\u201d? normally a trust Anchor is not a sharable data. It should be private and kept secure within its owner.\n\nA7:  Here we mean the Lead Verifier can check the Attestation Result from sub Verifier by check the signature from them, as the Lead Verifier has the public keys of all of them. \n\nQ8: [Page 8]\n\n\u201cVerifiers are cascaded to perform the Attestation\n   Appraisal.\n\u201d\n\nGA>> Who decides the order in the chain? Is the order important? \n\nA8: Whether the order is important depends on the cases. This is the part will be further explored. \n\nQ9: \u201cEach Verifier in the chain possess the knowledge of the\n   entire Composite Attester topology.\n\u201d\nGA>> why?  A verifier needs only to know how to derive / extract / retrieve its associated evidence. \n\n\nA9: The topology can be considered as part of the information inside the Evidence. \n\n\nQ10: \u201cThe Verifier which processes the\n   Composite Evidence, Verifies the signature on the Evidence, if\n   present.\n\u201d\nGA>> again, this implies some assumptions, e.g., the credentials to verify the signature. Also, this verifier needs to inform the following verifiers that he properly checked the signature? Or this verification is going to be repeated by all the verifiers? \n\n\n\u201cIt decodes the Composite Evidence performs Appraisal of the\n   Component Attester whose Reference Values and Endorsements are in its\n  database.\n\u201d\nGA>> Here also, this assumes that the verifier knows how to retrieve its associated evidence.  This could be done either by using an external entity (e.g., verifier owner) and / or by introducing some data, in the CE, specific to each verifier/ component. \n\n\n\nA10: This is the interesting part that the partial AR and the original Evidence becomes an \u201cEvidence\u201c for the next Verifier. I think this might be further discussed in the design team meeting in the remote attestation for complex scenarios. \n\n\nQ11: [Page 9]\n\n\u201cAs shown in the picture, the partial results and Combined Evidence is\n   transmitted to a chain of Verifier, till the Appraisal is complete.\n   The Verifier combines the incoming partial results, combines the\n   results from it own Evidence Appraisal and passes the Aggregated\n   Attestation Results to the Verifier from which it receives Combined\n   Evidence.\n\u201d\nGA>> this scenario assumes that the aggregation of the results is done at the first flow \u201cfrom attester to Verifier N\u201d.  This may imply an important delay. Instead, you can think about transmitting the CE across all the chain and the aggregation of the results occurs when a verifier receives a partial AR. This will enable verifiers to compute their corresponding AR almost at the same time\u2026 BUT this option does not work if the partial AR of verifier N depends on partial AR of verifier N-1. \n\nA11: Yes. The efficiency is also a part can be further discussed.\n\n\nQ12: \u201c   In the cascaded pattern, the communicating Verifiers fully trust each\n   other.\n\u201d\nGA>> you don\u2019t need this. Why? \n\nA12:  In current draft, we list certain options for the cascade pattern, other options are also possible and under investigation. \n\nQ13: \u201cEach Verifier has the trust anchor for the Verifier it is\n   communicating to (i.e. either sending information or receiving\n   information)\n\u201d\nGA>> can you explain what do you mean by has the trust anchor?\n\nA13: This part can be referred to YD\u2019s answer.\n\n\nQ14: \u201cHence RP fully trusts all the\n   Verifiers.\n\u201d\nGA>> when you say X trusts Y. Can you explain what does this imply? It could be useful to have concrete examples.\n\n\nA14: The methods mentioned in section 7 of RFC9334 are possible solutions.\n\n\nQ15: \u201c4.3.  Hybrid Pattern\u201d \n\nGA>> for every Pattern, it would be useful to have a concrete example / use case. \n\nA15:  That is a good suggestion and we are also welcome vendors that have such needs to contribute. \n\nQ16:  Page 10\n\n\u201c5.  Freshness\n\u201d\nGA>> this will work if you consider the current trust model (all trusts all) but if you will revise it. I think the freshness should be checked by every verifier in all patterns. \n\nA16: Yes. The design of freshness mechanism will also be an interesting part to explore in the multiple Verifier framework. \n\n\nQ17: \u201c   The Verifier is effectively part of the Attesters' and Relying\n   Parties' trusted computing base (TCB).\n\u201d\nGA>> why? \n\nA17: That means,  in order to make the whole procedure of attestation work, there should be certain trust relationship between attester, relying party and Verifiers.\n\nQ18: Page 11\n\n\u201c  there might be a need for confidentiality protection of the\n       individual Evidence from Lead Verifier to sub Verifiers.\n\u201d\nGA>> I would even say that confidentiality should be from Attester to sub-verifier. \n\nA18: This depends on whether the Attester has the requirement for confidentiality. If it does not have such a requirement, then the confidentiality protection from Lead Verifier to sub Verifiers might not be necessary.\n\nQ16: \u201c\n   2.  The Verfier always communicates with a known Verifier in the\n       chain.  Hence it only maintains the trust roots for its\n       communicating Verifier.\n\u201d\nGA>> it does not work because you previously said that the Attester choose a random verifier to start the verification. This implies that the first verifier may not be the same all the time. This also implies that the chain may change which implies that the neighbors also may change.  This will bring us to the first option: all verifiers know each other, or you can also define a set of neighbors that know each other. \n\nA16: This leads to a more general problem: discovery of Verifiers, Format of Composite Evidence, Format of Aggregated Attestation Results, Appraisal of Verifiers to the composite Evidence, supply chain for composite device, which is the topic that remote attestation in the complex scenarios might address. For the current version, I agree with Yogesh that we will revisit the text and to make it more clear. \n",
          "createdAt": "2025-09-26T07:26:42Z",
          "updatedAt": "2025-09-26T07:26:42Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "I_kwDON24c9s7OnvgB",
      "title": "GOSSIP-like multi-verifier architecture",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/33",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The current draft anticipates patterns for hierarchical and cascaded topologies, but doesn't consider GOSSIP-like topologies where there can be redundant verifiers for improved availability.\n\nGOSSIP protocols could also create hybrids of the above 3 topologies.",
      "createdAt": "2025-09-29T20:33:25Z",
      "updatedAt": "2025-10-03T09:05:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "The topologies, described in the document, are more describing the nature of RoT's capability for Verification, rather than focusing on redundancy aspect, which is more of deployment options based on individual needs of a particular eco-system.\n\nThese two are orthogonal (in at least my view). \n\nOne aspect worth consideration is Verifier discoverability, from capabilities.",
          "createdAt": "2025-09-30T09:06:04Z",
          "updatedAt": "2025-09-30T09:06:04Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I think Ned is proposing a different topological configuration from the ones currently presented.\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b  \n\nNed, if I understand correctly, you are imagining a multicast domain in which some sort of peer-to-peer gossip protocol could be used to disseminate evidence and aggregate attestation results among the nodes participating in this gossip layer?\n\nI wonder if another type of topology might be one that uses pub-sub on a logically shared bus.",
          "createdAt": "2025-09-30T16:03:09Z",
          "updatedAt": "2025-09-30T16:03:22Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "NONE",
          "body": "GOSSIP can be applied to shared bus as well as Internet. The particular GOSSIP protocol isn't that important IMHO. The main differences are: a) Attester / RP can decide which Verifier(s) to use. b) Verifiers can decide which other verifiers to use. (b) overlaps with existing patterns, so you could say GOSSIP pattern is a hybrid, but it also has (a). ",
          "createdAt": "2025-09-30T18:34:21Z",
          "updatedAt": "2025-09-30T18:34:21Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith Is there any use case where this Mesh Topology can be considered for Verification ?",
          "createdAt": "2025-10-03T08:29:00Z",
          "updatedAt": "2025-10-03T09:05:12Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDON24c9s6LH1bR",
      "title": "Add Initial Draft of Verification Toplogies",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/1",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-13T15:19:54Z",
      "updatedAt": "2025-02-13T15:20:03Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "06975f36af95768c9691439dd22d69215df0f2af",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "initial-work",
      "headRefOid": "f4502b78cfa1a70b3c0da408db3ef9ccdc18a838",
      "closedAt": "2025-02-13T15:20:02Z",
      "mergedAt": "2025-02-13T15:20:02Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "03deb0a865dfd0a0e49ee84aa85517cfc4f33e37"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDON24c9s6LcN0C",
      "title": "Add Initial Draft of Verification Topology",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/2",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-17T10:56:31Z",
      "updatedAt": "2025-02-17T10:59:07Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "03deb0a865dfd0a0e49ee84aa85517cfc4f33e37",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "initial-work",
      "headRefOid": "942fceb3b66a5803651c68661de4d7e799d1d078",
      "closedAt": "2025-02-17T10:59:07Z",
      "mergedAt": "2025-02-17T10:59:07Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "087148eeb35ea5cd0d86e00f9930791c217baa2e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDON24c9s6LdKAV",
      "title": "Initial work",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/3",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-17T12:49:59Z",
      "updatedAt": "2025-02-17T12:51:31Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "087148eeb35ea5cd0d86e00f9930791c217baa2e",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "initial-work",
      "headRefOid": "ba56ad85b1d2ef08f3b64ddf31b48e9bc56db7b3",
      "closedAt": "2025-02-17T12:51:31Z",
      "mergedAt": "2025-02-17T12:51:31Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "bc26166c5d10effa30356e29dbd752d13ae3202f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDON24c9s6LnfiP",
      "title": "Update draft-deshpande-rats-multi-verifier.md",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/4",
      "state": "MERGED",
      "author": "junzhanghw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "correct some typos\r\nmention that the attester contacts verifier directly or indirectly add the session of the freshness",
      "createdAt": "2025-02-18T15:28:29Z",
      "updatedAt": "2025-02-18T16:14:11Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "edee20891cef3257f1bd3b83f601fc3931601845",
      "headRepository": "junzhanghw/draft-deshpande-multi-verifier",
      "headRefName": "patch-1",
      "headRefOid": "6e555329fc4618abf93f0a553a03b6cfe7f88dd8",
      "closedAt": "2025-02-18T15:42:54Z",
      "mergedAt": "2025-02-18T15:42:54Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "47a64b11600412ba9b1dc794e75916cba204ae05"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "we will discuss this more this Friday, I have some ideas!",
          "createdAt": "2025-02-18T16:12:15Z",
          "updatedAt": "2025-02-18T16:12:15Z"
        },
        {
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks. I have left some new remarks in miro. We can discuss later to see whether add related text into the draft or not.\r\n\r\nFrom: Yogesh Deshpande ***@***.***>\r\nSent: 2025\u5e742\u670818\u65e5 17:13\r\nTo: ietf-rats/draft-deshpande-multi-verifier ***@***.***>\r\nCc: junzhang ***@***.***>; Author ***@***.***>\r\nSubject: Re: [ietf-rats/draft-deshpande-multi-verifier] Update draft-deshpande-rats-multi-verifier.md (PR #4)\r\n\r\n\r\nwe will discuss this more this Friday, I have some ideas!\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/4#issuecomment-2666181232>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/BDPVEJJZZYGCYDAIUSI6WBT2QNLXPAVCNFSM6AAAAABXL5YQS2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMNRWGE4DCMRTGI>.\r\nYou are receiving this because you authored the thread.Message ID: ***@***.******@***.***>>\r\n[yogeshbdeshpande]yogeshbdeshpande left a comment (ietf-rats/draft-deshpande-multi-verifier#4)<https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/4#issuecomment-2666181232>\r\n\r\nwe will discuss this more this Friday, I have some ideas!\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/4#issuecomment-2666181232>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/BDPVEJJZZYGCYDAIUSI6WBT2QNLXPAVCNFSM6AAAAABXL5YQS2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMNRWGE4DCMRTGI>.\r\nYou are receiving this because you authored the thread.Message ID: ***@***.******@***.***>>\r\n",
          "createdAt": "2025-02-18T16:14:10Z",
          "updatedAt": "2025-02-18T16:14:10Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s6cZ5nU",
          "commit": {
            "abbreviatedOid": "6b77515"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T15:40:31Z",
          "updatedAt": "2025-02-18T15:40:32Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\n\r\nThe Verifier needs to ensure that the claims included in the Evidence reflect the latest state of the Attester. As per RATS Architecture, the recommended freshness is ascertained using either Synchronised Clocks, Epoch IDs, or nonce, embedded in the Evidence.\r\n\r\nIn the case of Hierarchical Pattern, the Verification of Freshness should be checked by the Lead Verifier. \r\n \r\nIn the Cascaded Pattern, the freshness is always checked by the first Verifier in communication with either the Attester (Passport Model) or Relying Party (Background Check Model)\r\n\r\n```",
              "createdAt": "2025-02-18T15:40:31Z",
              "updatedAt": "2025-02-18T15:40:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6cZ6iF",
          "commit": {
            "abbreviatedOid": "2e6cb18"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T15:41:30Z",
          "updatedAt": "2025-02-18T15:41:31Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nThe Verifier needs to ensure that the claims included in the Evidence reflect the latest state of the Attester. As per RATS Architecture, the recommended freshness is ascertained using either Synchronised Clocks, Epoch IDs, or nonce, embedded in the Evidence.\r\nIn the case of Hierarchical Pattern, the Verification of Freshness should be checked by the Lead Verifier. \r\n \r\nIn the Cascaded Pattern, the freshness is always checked by the first Verifier in communication with either the Attester (Passport Model) or Relying Party (Background Check Model).\r\n```",
              "createdAt": "2025-02-18T15:41:31Z",
              "updatedAt": "2025-02-18T15:41:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6cZ7mA",
          "commit": {
            "abbreviatedOid": "6e55532"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2025-02-18T15:42:38Z",
          "updatedAt": "2025-02-18T15:42:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s6caC9j",
          "commit": {
            "abbreviatedOid": "6e55532"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "ok for the modification in the freshness section.",
          "createdAt": "2025-02-18T15:48:53Z",
          "updatedAt": "2025-02-18T15:48:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDON24c9s6MzMkW",
      "title": "Update draft-deshpande-rats-multi-verifier.md",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/13",
      "state": "MERGED",
      "author": "junzhanghw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "update henk into author list",
      "createdAt": "2025-02-27T13:35:14Z",
      "updatedAt": "2025-02-27T15:48:26Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "47a64b11600412ba9b1dc794e75916cba204ae05",
      "headRepository": "junzhanghw/draft-deshpande-multi-verifier",
      "headRefName": "patch-4",
      "headRefOid": "71470e625d1543529c2b9dff243e9cd93f25c519",
      "closedAt": "2025-02-27T15:48:26Z",
      "mergedAt": "2025-02-27T15:48:26Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "130e8a42ed976fcc3356ab9204721fe89d83f5c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s6d0mLz",
          "commit": {
            "abbreviatedOid": "71470e6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-27T13:38:49Z",
          "updatedAt": "2025-02-27T13:38:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDON24c9s6M6YPR",
      "title": "fix pics",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/14",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Partially fix #10 ",
      "createdAt": "2025-02-28T09:26:05Z",
      "updatedAt": "2025-02-28T09:30:31Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "0d3abc8d663a23ae590aaa66369ce4f2d61c75f0",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "pics",
      "headRefOid": "6ff6883792d0fff8a25b5902d2f0d975572759db",
      "closedAt": "2025-02-28T09:30:31Z",
      "mergedAt": "2025-02-28T09:30:31Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "ba5ff639407f66dde664504720cca5d892ea2133"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s6d9x41",
          "commit": {
            "abbreviatedOid": "6ff6883"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-02-28T09:30:24Z",
          "updatedAt": "2025-02-28T09:30:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDON24c9s6M61yI",
      "title": "Fix wrong use of term tandem",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/15",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #7",
      "createdAt": "2025-02-28T10:27:54Z",
      "updatedAt": "2025-02-28T12:43:51Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "ba5ff639407f66dde664504720cca5d892ea2133",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "tandem-correction",
      "headRefOid": "318b23e426623b4e43df9c4590c82b5cd7480321",
      "closedAt": "2025-02-28T12:43:47Z",
      "mergedAt": "2025-02-28T12:43:47Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "b813f9482f3056336c88922ce26dfacddfffeb6a"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Have changed it now, at both places, we can proceed if you are ok?",
          "createdAt": "2025-02-28T12:32:35Z",
          "updatedAt": "2025-02-28T12:32:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s6d_Pvb",
          "commit": {
            "abbreviatedOid": "e00ffed"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T12:24:39Z",
          "updatedAt": "2025-02-28T12:24:39Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "\"coordinate together\" sounds a bit weird.\r\n\r\nI suggest \"collaborate\" or \"work together\".\r\n\r\n```suggestion\r\nA Composite Attester has multiple Component Attesters. Each Attester requires a different set of Verifiers. Hence multiple Verifiers collaborate to appraise a Composite Attester.\r\n```",
              "createdAt": "2025-02-28T12:24:39Z",
              "updatedAt": "2025-02-28T12:24:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6d_Syl",
          "commit": {
            "abbreviatedOid": "e00ffed"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T12:30:14Z",
          "updatedAt": "2025-02-28T12:30:14Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "ok, changed it. Thanks",
              "createdAt": "2025-02-28T12:30:14Z",
              "updatedAt": "2025-02-28T12:30:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6d_T5I",
          "commit": {
            "abbreviatedOid": "c516f5e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T12:31:51Z",
          "updatedAt": "2025-02-28T12:31:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nA Verifier needs Reference Values and Endorsements from the supply chain actors (for example OEM/ODM) to conduct the appraisal of an Attester. Given the range of Component Attesters in a Composite Attester, it is possible that a single Verifier may not have all the capabilities or the information required to conduct the complete appraisal of the Composite Attester. In this case, multiple Verifiers need to collaborate to conclude the appraisal and produce the Attestation Results.\r\n```",
              "createdAt": "2025-02-28T12:31:51Z",
              "updatedAt": "2025-02-28T12:31:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6d_XNx",
          "commit": {
            "abbreviatedOid": "318b23e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-28T12:38:53Z",
          "updatedAt": "2025-02-28T12:38:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDON24c9s6NKCAt",
      "title": "Update draft-deshpande-rats-multi-verifier.md",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/17",
      "state": "MERGED",
      "author": "junzhanghw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "update the author list and contributor list",
      "createdAt": "2025-03-03T13:55:34Z",
      "updatedAt": "2025-03-14T11:13:28Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "5d679366984dde3f99017b6acb0f293c78633e43",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "junzhanghw-patch-1",
      "headRefOid": "0ac8f55ccd3c4425f19ed158574a60d0d09ba2f5",
      "closedAt": "2025-03-14T11:13:23Z",
      "mergedAt": "2025-03-14T11:13:23Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "7118853cc4244bb93dfb33eb72ca98b397b5de85"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Duplicate!",
          "createdAt": "2025-03-03T15:48:22Z",
          "updatedAt": "2025-03-03T15:48:22Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Duplicate!\r\n\r\nsure?",
          "createdAt": "2025-03-03T15:51:11Z",
          "updatedAt": "2025-03-03T15:51:11Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Hmm, mistake, mistake !\r\n\r\nIt seems that there was a duplicate one, which clashed, while closing!",
          "createdAt": "2025-03-03T15:54:55Z",
          "updatedAt": "2025-03-03T15:54:55Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Re-opened it now! My sincere Apologies!",
          "createdAt": "2025-03-03T15:55:17Z",
          "updatedAt": "2025-03-03T15:55:17Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s6eOhqi",
          "commit": {
            "abbreviatedOid": "0ac8f55"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T16:16:35Z",
          "updatedAt": "2025-03-03T16:16:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDON24c9s6NK4LL",
      "title": "Insert new lines to make Security Considerations a new section",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/18",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-03T15:29:17Z",
      "updatedAt": "2025-03-03T15:30:57Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "b813f9482f3056336c88922ce26dfacddfffeb6a",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "fix-indents",
      "headRefOid": "b189bcff28f42861657da74e021a97f5b7de4422",
      "closedAt": "2025-03-03T15:30:57Z",
      "mergedAt": "2025-03-03T15:30:57Z",
      "mergedBy": "junzhanghw",
      "mergeCommit": {
        "oid": "5d679366984dde3f99017b6acb0f293c78633e43"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s6eOC4O",
          "commit": {
            "abbreviatedOid": "b189bcf"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T15:30:42Z",
          "updatedAt": "2025-03-03T15:30:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 23,
      "id": "PR_kwDON24c9s6Wv9GA",
      "title": "First draft documenting motivation",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/23",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [],
      "body": "Fixes #20",
      "createdAt": "2025-05-19T15:49:55Z",
      "updatedAt": "2025-06-13T09:50:29Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "7118853cc4244bb93dfb33eb72ca98b397b5de85",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "motivation",
      "headRefOid": "48fd2738c113189cc022cd1f300478875908ed1e",
      "closedAt": "2025-06-13T09:50:25Z",
      "mergedAt": "2025-06-13T09:50:25Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "e0cc76cd59fd23246b5816677ffe7f389f512050"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s6p_aXD",
          "commit": {
            "abbreviatedOid": "f1d0fb6"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I have left three comments in line 82, 91 and 92.",
          "createdAt": "2025-05-19T20:53:24Z",
          "updatedAt": "2025-05-20T07:39:27Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "should be 3 in line 91",
              "createdAt": "2025-05-19T20:53:24Z",
              "updatedAt": "2025-05-20T07:39:27Z"
            },
            {
              "originalPosition": 30,
              "body": "should be 4 in line 92",
              "createdAt": "2025-05-19T20:53:51Z",
              "updatedAt": "2025-05-20T07:39:27Z"
            },
            {
              "originalPosition": 20,
              "body": "4. Certificates for Attesting Environments.",
              "createdAt": "2025-05-20T07:38:24Z",
              "updatedAt": "2025-05-20T07:39:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qD7aH",
          "commit": {
            "abbreviatedOid": "f1d0fb6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-20T08:14:31Z",
          "updatedAt": "2025-05-20T08:14:31Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n3. There may not be a single actor in the ecosystem, that can stand up and take ownership of Verifying every component Attester due to lack of knowledge, complexity, regulations or associated cost.\r\n```",
              "createdAt": "2025-05-20T08:14:31Z",
              "updatedAt": "2025-05-20T08:14:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qD7iF",
          "commit": {
            "abbreviatedOid": "f1d0fb6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-20T08:14:42Z",
          "updatedAt": "2025-05-20T08:14:42Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\n4. Verifier services provided by component manufactures as well as Verifiers provided by the integrators, as well as Verifiers under local authority (close to the Attester) are the mix today and rarely it is just one of them.\r\n```",
              "createdAt": "2025-05-20T08:14:42Z",
              "updatedAt": "2025-05-20T08:14:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qD8dO",
          "commit": {
            "abbreviatedOid": "665c825"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-20T08:15:48Z",
          "updatedAt": "2025-05-20T08:15:49Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Certificates for Attesting Environments come under Endorsements in RATS Architecture so they are covered!",
              "createdAt": "2025-05-20T08:15:48Z",
              "updatedAt": "2025-05-20T08:15:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qe32h",
          "commit": {
            "abbreviatedOid": "665c825"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-22T08:07:51Z",
          "updatedAt": "2025-05-22T08:07:52Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nTo conduct the task of Evidence appraisal, a Verifier requires:\r\n```",
              "createdAt": "2025-05-22T08:07:51Z",
              "updatedAt": "2025-05-22T09:03:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qe56J",
          "commit": {
            "abbreviatedOid": "665c825"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-22T08:10:47Z",
          "updatedAt": "2025-05-22T08:10:47Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n1. Reference Values from trusted supply chain actors producing, aggregating, or administering Attesters (Reference Value Providers)\r\n2. Endorsements from trusted supply chain actors producing, certifying, or compliance checking Attesters (Endorsers)\r\n3. Appraisal Policy for Evidence, which is under the control of the Verifier Owner\r\n```",
              "createdAt": "2025-05-22T08:10:47Z",
              "updatedAt": "2025-05-22T09:04:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qe6uz",
          "commit": {
            "abbreviatedOid": "665c825"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-22T08:11:57Z",
          "updatedAt": "2025-05-22T08:11:57Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nThe Verifier inputs listed above are linked to the shape and form of the Attesters, i.e., the type of claims and the policies of appraisal of Evidence.\r\n```",
              "createdAt": "2025-05-22T08:11:57Z",
              "updatedAt": "2025-05-22T08:11:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qe856",
          "commit": {
            "abbreviatedOid": "665c825"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-22T08:14:58Z",
          "updatedAt": "2025-05-22T08:14:58Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nTypically, Composite Attesters come with a varying degree of heterogeneity of Evidence formats, depending on the type of Attesting Environments that come with each Component Attester, for example, CPU variants or GPU/FPGA variants.\r\n```",
              "createdAt": "2025-05-22T08:14:58Z",
              "updatedAt": "2025-05-22T09:07:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qe9bd",
          "commit": {
            "abbreviatedOid": "665c825"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-22T08:15:38Z",
          "updatedAt": "2025-05-22T08:15:38Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nAn Attester's composition can change over time based on market dynamics and availability (e.g., a set of racks in a\r\n```",
              "createdAt": "2025-05-22T08:15:38Z",
              "updatedAt": "2025-05-22T09:08:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qfjNm",
          "commit": {
            "abbreviatedOid": "665c825"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-22T09:02:21Z",
          "updatedAt": "2025-05-22T09:10:26Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nIn a Composite Attester system, it may not be possible for a single Verifier to possess all the capabilities or information required to conduct a complete appraisal of the Attester. Please refer to {{sec-need-multiverifier}} for motivation of this document. Multiple Verifiers need to collaborate to reach a conclusion on the appraisal and produce the Attestation Results.\r\n```",
              "createdAt": "2025-05-22T09:02:21Z",
              "updatedAt": "2025-05-22T09:10:26Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nA Verifier plays a central role in any Remote Attestation System. A Verifier appraises the Attester and produces Attestation Results, which are essentially a verdict of attestation. The results are consumed by the Relying Party to conclude the trustworthiness of the Attester, before making any critical decisions about the Attester, such as admitting it to the network or releasing confidential resources to it.\r\n```",
              "createdAt": "2025-05-22T09:03:18Z",
              "updatedAt": "2025-05-22T09:10:26Z"
            },
            {
              "originalPosition": 22,
              "body": "I think we have \"Component Attester\u201d in the glossary, rithg?  If not, we shldou :-)",
              "createdAt": "2025-05-22T09:08:05Z",
              "updatedAt": "2025-05-22T09:10:27Z"
            },
            {
              "originalPosition": 23,
              "body": "Instead of \u201cmarket dynamics\u201d I think \u201cdeployment updates\u201d is preferable.",
              "createdAt": "2025-05-22T09:10:21Z",
              "updatedAt": "2025-05-22T09:10:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qgFww",
          "commit": {
            "abbreviatedOid": "665c825"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-22T09:43:10Z",
          "updatedAt": "2025-05-22T09:43:10Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Yes we have Component Attester already in the Glossary!",
              "createdAt": "2025-05-22T09:43:10Z",
              "updatedAt": "2025-05-22T09:43:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6qgG-k",
          "commit": {
            "abbreviatedOid": "665c825"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-22T09:44:49Z",
          "updatedAt": "2025-05-22T09:44:50Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "No I think, market dynamics is more suited that goes to the root why it changes, instead `deployment updates` which sort of reflects the action..",
              "createdAt": "2025-05-22T09:44:49Z",
              "updatedAt": "2025-05-22T09:44:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6s0LKJ",
          "commit": {
            "abbreviatedOid": "a59bc0e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-05T08:31:20Z",
          "updatedAt": "2025-06-05T08:31:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s6s0SaS",
          "commit": {
            "abbreviatedOid": "a59bc0e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-05T08:41:03Z",
          "updatedAt": "2025-06-05T08:47:20Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Lines 88-92 *may* be ok in terms of content (although I am not entirely sure about 2), but they need some more work on the exposition to improve clarity.\r\n\r\nBesides, I don\u2019t understand why they are grouped separately.  They seem like core arguments to me, i.e., not hierarchically inferior to the \u201cmarket dynamics\u201d argument above.\r\n\r\nIn general, I believe it\u2019d be better to restructure the section in a cleaner fashion, e.g., with a bullet list where each separate point is clearly and concisely articulated.",
              "createdAt": "2025-06-05T08:41:03Z",
              "updatedAt": "2025-06-05T08:47:20Z"
            },
            {
              "originalPosition": 24,
              "body": "it looks like  we don\u2019t do NSNL here.  What\u2019s the reason?",
              "createdAt": "2025-06-05T08:42:31Z",
              "updatedAt": "2025-06-05T08:47:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6uC-ZB",
          "commit": {
            "abbreviatedOid": "626b642"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "looks good",
          "createdAt": "2025-06-12T08:12:30Z",
          "updatedAt": "2025-06-12T08:12:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s6uC_w2",
          "commit": {
            "abbreviatedOid": "626b642"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "looks good",
          "createdAt": "2025-06-12T08:14:00Z",
          "updatedAt": "2025-06-12T08:14:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s6uSQ30",
          "commit": {
            "abbreviatedOid": "626b642"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-13T09:25:48Z",
          "updatedAt": "2025-06-13T09:45:42Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nThe Verifier inputs listed above are linked to the shape of the Attesters.\r\nTypically, Composite Attesters come with a varying degree of heterogeneity of Evidence formats, depending on the type of Attesting Environments that come with each Component Attester, for example, CPU variants or GPU/FPGA variants. When conducting Evidence appraisal for a Composite Attester, the following challenges remain:\r\n\r\n```",
              "createdAt": "2025-06-13T09:25:48Z",
              "updatedAt": "2025-06-13T09:45:42Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n1. An Attester's composition can change over time based on market dynamics and availability (e.g., a set of racks in a data center gets thousands of new FPGAs).\r\nIt is highly unlikely that there is always one appropriate Verifier that satisfies all the requirements that a complex and changing Composite Attesters imposes.\r\nIt may not be economically viable to build and maintain such a degree of complexity in a single Verifier.\r\n2. A Verifier Owner may have an Appraisal Policy for Evidence of a Component Attester that is internal to them and which they may choose not to reveal to a \u201cmonolithic\" Verifier.\r\n3. A Reference Values Provider may not wish to reveal its Reference Values or their lifecycle to a monolithic Verifier.\r\n4. There may not be a single actor in the ecosystem that can stand up and take ownership of verifying every Component Attester due to a lack of knowledge, complexity, regulations or associated cost.\r\n5. The mix today is a combination of Verifier services provided by component manufacturers, Verifiers provided by integrators, and Verifiers under local authority (i.e., close to the attester). Rarely is it just one of these.\r\n```",
              "createdAt": "2025-06-13T09:34:15Z",
              "updatedAt": "2025-06-13T09:45:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6uSpaI",
          "commit": {
            "abbreviatedOid": "fcbd2c5"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-13T09:49:42Z",
          "updatedAt": "2025-06-13T09:49:42Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n1. An Attester's composition can change over time based on market requirements and availability (e.g., a set of racks in a data center gets thousands of new FPGAs).\r\n```",
              "createdAt": "2025-06-13T09:49:42Z",
              "updatedAt": "2025-06-13T09:49:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6uSpuA",
          "commit": {
            "abbreviatedOid": "48fd273"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-13T09:50:03Z",
          "updatedAt": "2025-06-13T09:50:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 24,
      "id": "PR_kwDON24c9s6Zk2p9",
      "title": "Add Security and Privacy Considerations section",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/24",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-08T11:06:01Z",
      "updatedAt": "2025-07-03T08:50:23Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "e0cc76cd59fd23246b5816677ffe7f389f512050",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "multi-verifier-security",
      "headRefOid": "d2beedcd4b823fc379e929e9ad2486d905c1de03",
      "closedAt": "2025-07-03T08:50:20Z",
      "mergedAt": "2025-07-03T08:50:20Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "35b0f2750780dd280e28f4c203438ec129f2f741"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you @thomas-fossati for reviewing this important bit of section in the Multi-Verifier Draft.\r\n\r\nI have taken your minor edits and comments, about UCCS type use case, which seems to be very relevant and important addition.\r\n\r\nApart from that, I have taken your feedback and made the Message Protection more crisp and tight.\r\n\r\nHowever, I do feel, we should present all options (including Application layer encryption) as detailed in Security aspects of RFC 9334 as well..\r\n\r\nPlease feel free to discuss further, if there are any major objections, but thank you again for the review!",
          "createdAt": "2025-06-26T13:36:17Z",
          "updatedAt": "2025-06-26T13:36:17Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Please feel free to discuss further, if there are any major objections\r\n\r\nI believe I stated my point clearly, no need to get bogged down in endless discussion about minor aspects :-)\r\n\r\n> but thank you again for the review!\r\n\r\nSure, no problems, apologies for the dealy.",
          "createdAt": "2025-06-26T13:44:25Z",
          "updatedAt": "2025-06-26T13:44:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s6tXiQd",
          "commit": {
            "abbreviatedOid": "15801fa"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-08T20:20:41Z",
          "updatedAt": "2025-06-08T20:20:42Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Notice that, in line 241 we have already mentioned the secure channel between verifiers, so the confidentiality is already guaranteed. Also, we need to have a mechanism to ensure the Lead Verifier does not become the point to leak the information, while the confidential environment (TEE) provides one solution. ",
              "createdAt": "2025-06-08T20:20:41Z",
              "updatedAt": "2025-06-08T20:20:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6tXiiD",
          "commit": {
            "abbreviatedOid": "15801fa"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-08T20:24:07Z",
          "updatedAt": "2025-06-08T20:32:00Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "The topology between Verifiers in the cascade model is fixed. Hence for each Verifier, it only maintains the trust roots for its neighboring Verifiers in the chain.",
              "createdAt": "2025-06-08T20:24:07Z",
              "updatedAt": "2025-06-08T20:32:00Z"
            },
            {
              "originalPosition": 47,
              "body": "what is Sender in this context? One Verifier in the chain, or the Attester/RP?",
              "createdAt": "2025-06-08T20:26:14Z",
              "updatedAt": "2025-06-08T20:32:00Z"
            },
            {
              "originalPosition": 47,
              "body": "Each sub evidence collected at the Lead Attester needs to be encrypted by the key (symmetric, or public key in the asymmetric case)  only knows by the corresponding sub Verifier, to ensure the confidentiality of the sub Evidence. ",
              "createdAt": "2025-06-08T20:31:25Z",
              "updatedAt": "2025-06-08T20:32:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6uSRgv",
          "commit": {
            "abbreviatedOid": "911ea56"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-13T09:26:34Z",
          "updatedAt": "2025-06-13T09:26:35Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Now added security of the Verifier Implementation aspect.\r\n\r\nAlso clarified that additional aspect of application layer security on top of transport layer security!",
              "createdAt": "2025-06-13T09:26:34Z",
              "updatedAt": "2025-06-13T09:26:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6vZtTQ",
          "commit": {
            "abbreviatedOid": "bbc6682"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T12:11:44Z",
          "updatedAt": "2025-06-19T12:11:44Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Yes, but there is no fixed pattern of the communicating Verifiers, so we cannot assume a sequence apriori!",
              "createdAt": "2025-06-19T12:11:44Z",
              "updatedAt": "2025-06-19T12:11:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6whS93",
          "commit": {
            "abbreviatedOid": "340d06c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T10:04:08Z",
          "updatedAt": "2025-06-26T10:28:25Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "It seems that this whole paragraph could be replaced by the customary:\r\n\r\n> \"The security and privacy considerations in {{Section 11 of -corim}} apply in full.\"",
              "createdAt": "2025-06-26T10:04:08Z",
              "updatedAt": "2025-06-26T10:28:25Z"
            },
            {
              "originalPosition": 40,
              "body": "There might be cases where a lead attester receives unsigned evidence from a sub-attester over a secure channel on the SOC, e.g., as a UCCS.",
              "createdAt": "2025-06-26T10:13:52Z",
              "updatedAt": "2025-06-26T10:28:25Z"
            },
            {
              "originalPosition": 38,
              "body": "s/may contain/contains/",
              "createdAt": "2025-06-26T10:14:46Z",
              "updatedAt": "2025-06-26T10:28:25Z"
            },
            {
              "originalPosition": 20,
              "body": "After having re-read it, ISTM that the gist can be captured in the following simple recommendations:\r\n1. The conceptual messages are exchanged over an authenticated and encrypted channel\r\n2. Each \u201cpartial\" Attestation Result messages are signed by a key known by the Lead to belong to the expected Verifier.\r\n\r\nGiven the two above, I fail to see how adding object-level encryption would be an improvement.",
              "createdAt": "2025-06-26T10:27:38Z",
              "updatedAt": "2025-06-26T10:28:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6wi_Ud",
          "commit": {
            "abbreviatedOid": "340d06c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T12:40:19Z",
          "updatedAt": "2025-06-26T12:40:19Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "The introductory text sets some context about the appraisal procedure before referring it to the meat of Security Considerations in the CoRIM which is been referred. Hence I prefer to retain the introductory line and take the reader to the Implementation aspect CoRIM section reference! ",
              "createdAt": "2025-06-26T12:40:19Z",
              "updatedAt": "2025-06-26T12:40:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6wjBd6",
          "commit": {
            "abbreviatedOid": "340d06c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T12:42:49Z",
          "updatedAt": "2025-06-26T12:42:49Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nThe Composite Attester Evidence contains Component Attester Evidence, each having signature\r\n```",
              "createdAt": "2025-06-26T12:42:49Z",
              "updatedAt": "2025-06-26T12:42:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6wjOBG",
          "commit": {
            "abbreviatedOid": "0747008"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T12:57:44Z",
          "updatedAt": "2025-06-26T12:57:44Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "To your comment: `Given the two above, I fail to see how adding object-level encryption would be an improvement.`\r\n\r\nIf an application want to terminate the Confidentiality at the Application Layer, it may choose to do object level encryption.\r\n\r\nWe are providing all options here so an implementation may/may not want to it this way, but statements are important. This is  aligned with the statements in RATS Architecture (RFC 9334)",
              "createdAt": "2025-06-26T12:57:44Z",
              "updatedAt": "2025-06-26T12:57:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6wjTxc",
          "commit": {
            "abbreviatedOid": "340d06c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T13:04:27Z",
          "updatedAt": "2025-06-26T13:04:27Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Since the intro text seems a quasi-verbatim copy from CoRIM\u2019s security and privacy cons, it seemed superfluous.  YMMV.",
              "createdAt": "2025-06-26T13:04:27Z",
              "updatedAt": "2025-06-26T13:04:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6wjWUc",
          "commit": {
            "abbreviatedOid": "340d06c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T13:07:22Z",
          "updatedAt": "2025-06-26T13:07:22Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Options must have a purpose.  What is the purpose of encrypting the conceptual messages if the transport between adjacent Verifiers is already required to be secured? ",
              "createdAt": "2025-06-26T13:07:22Z",
              "updatedAt": "2025-06-26T13:07:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6wjZ6n",
          "commit": {
            "abbreviatedOid": "340d06c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T13:11:35Z",
          "updatedAt": "2025-06-26T13:11:35Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "> Options must have a purpose. What is the purpose of encrypting the conceptual messages if the transport between adjacent Verifiers is already required to be secured?\r\n\r\nThe purpose is that, if some protocol cannot implement transport layer security they can implement it at the Application Layer, so everything is recommended here, for Consideration.",
              "createdAt": "2025-06-26T13:11:35Z",
              "updatedAt": "2025-06-26T13:11:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6wjjUR",
          "commit": {
            "abbreviatedOid": "340d06c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T13:22:22Z",
          "updatedAt": "2025-06-26T13:22:22Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "> [\u2026] if some protocol cannot implement transport layer security\r\n\r\nIt\u2019s 2025, TLS (or similar secure transport) must be the bare minimum.",
              "createdAt": "2025-06-26T13:22:22Z",
              "updatedAt": "2025-06-26T13:22:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6wjoNu",
          "commit": {
            "abbreviatedOid": "340d06c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-26T13:27:45Z",
          "updatedAt": "2025-06-26T13:27:45Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Good Point, I added a section to address this use case!",
              "createdAt": "2025-06-26T13:27:45Z",
              "updatedAt": "2025-06-26T13:27:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDON24c9s6bNe90",
      "title": "Adding Houda changes",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/25",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-19T08:12:44Z",
      "updatedAt": "2025-06-19T08:16:31Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "e0cc76cd59fd23246b5816677ffe7f389f512050",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "houda-temp",
      "headRefOid": "491723290d28d29d1b57f6df04632d1db62e0828",
      "closedAt": "2025-06-19T08:16:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s6vW_rM",
          "commit": {
            "abbreviatedOid": "a559114"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T08:13:20Z",
          "updatedAt": "2025-06-19T08:13:21Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "No this is not sufficient",
              "createdAt": "2025-06-19T08:13:21Z",
              "updatedAt": "2025-06-19T08:13:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6vW_6_",
          "commit": {
            "abbreviatedOid": "a559114"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T08:13:43Z",
          "updatedAt": "2025-06-19T08:13:44Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n// HOUDA CHANGES HERE, NOT ENOUGHT NEED TO DO MORE\r\n```",
              "createdAt": "2025-06-19T08:13:43Z",
              "updatedAt": "2025-06-19T08:13:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6vXAfh",
          "commit": {
            "abbreviatedOid": "ab2d9f9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T08:14:34Z",
          "updatedAt": "2025-06-19T08:14:34Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n// HOUDA CHANGES HERE, NOT ENOUGHT NEED TO DO MORE\r\nCHANGE 1\r\n```",
              "createdAt": "2025-06-19T08:14:34Z",
              "updatedAt": "2025-06-19T08:14:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s6vXAse",
          "commit": {
            "abbreviatedOid": "ab2d9f9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T08:14:52Z",
          "updatedAt": "2025-06-19T08:14:52Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\n5. The mix today is a combination of Verifier services provided by component manufacturers, Verifiers provided by integrators, and Verifiers under local authority (i.e., close to the attester). Rarely is it just one of these.\r\nMORE MORE\r\n```",
              "createdAt": "2025-06-19T08:14:52Z",
              "updatedAt": "2025-06-19T08:14:52Z"
            }
          ]
        }
      ]
    },
    {
      "number": 26,
      "id": "PR_kwDON24c9s6dPVR1",
      "title": "Rename the Title of the Draft",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/26",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-03T10:07:17Z",
      "updatedAt": "2025-07-03T10:07:54Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "35b0f2750780dd280e28f4c203438ec129f2f741",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "rename",
      "headRefOid": "2767da4eef8a6954139cf2bfd64a5d7abc9cfa46",
      "closedAt": "2025-07-03T10:07:48Z",
      "mergedAt": "2025-07-03T10:07:48Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "b8665700960b0dc262062c2475b154d6064f75c8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 27,
      "id": "PR_kwDON24c9s6dRbqP",
      "title": "Tidy up",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/27",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-03T13:37:53Z",
      "updatedAt": "2025-07-03T14:10:27Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "1a142e200bf541a4b4e770dff71314be4cace300",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "tidy-up",
      "headRefOid": "b32eba0d7e75f3226ca0a2a20140e15d01ff410f",
      "closedAt": "2025-07-03T14:10:23Z",
      "mergedAt": "2025-07-03T14:10:23Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "2e78cc8c027ca2437b9b87183f30c9721336c760"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 29,
      "id": "PR_kwDON24c9s6gWRel",
      "title": "Add better text on Purpose of the Document",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/29",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-23T22:12:41Z",
      "updatedAt": "2025-09-22T17:12:50Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "2e78cc8c027ca2437b9b87183f30c9721336c760",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "better-draft",
      "headRefOid": "e539be9aa2cff8725406c2d59cb8ee8ad321efd3",
      "closedAt": "2025-09-22T17:12:50Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "As per the meeting held on 19th September, the scope needs only about topological patterns, so closing this PR.\r\n\r\nSome part of the valid work is now captured under PR #32 ",
          "createdAt": "2025-09-22T17:12:48Z",
          "updatedAt": "2025-09-22T17:12:48Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s61wA1a",
          "commit": {
            "abbreviatedOid": "bdea85c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-23T22:14:53Z",
          "updatedAt": "2025-07-23T22:14:53Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\ninformation or messages exchanged between each of the Verifier in the eco-system.\r\n```",
              "createdAt": "2025-07-23T22:14:53Z",
              "updatedAt": "2025-07-23T22:14:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s612v9H",
          "commit": {
            "abbreviatedOid": "03af149"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-24T10:15:57Z",
          "updatedAt": "2025-07-24T10:15:57Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nThis enables inter-operatibility among different Verifiers owned by different Verifier Owners.\r\nOtherwise absence of standardisation can lead to fragmentation of the eco-system.\r\n```",
              "createdAt": "2025-07-24T10:15:57Z",
              "updatedAt": "2025-07-24T10:15:57Z"
            }
          ]
        }
      ]
    },
    {
      "number": 31,
      "id": "PR_kwDON24c9s6pfMpA",
      "title": "Add few Reference use cases",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/31",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-09-19T11:31:44Z",
      "updatedAt": "2025-09-26T09:28:23Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "2e78cc8c027ca2437b9b87183f30c9721336c760",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "reference-use-cases",
      "headRefOid": "54b6e742f17e0cb32eee9d03ed96e3bcecf71dc3",
      "closedAt": "2025-09-26T09:28:23Z",
      "mergedAt": "2025-09-26T09:28:23Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "576278727c18dd5175ea6fef478ad1f865cf10f7"
      },
      "comments": [
        {
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "body": "The two use cases look fine for me.",
          "createdAt": "2025-09-19T12:39:56Z",
          "updatedAt": "2025-09-19T12:39:56Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7BZfSa",
          "commit": {
            "abbreviatedOid": "8d1687d"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "the two use cases look fine for me",
          "createdAt": "2025-09-19T12:40:34Z",
          "updatedAt": "2025-09-19T12:40:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s7BfBni",
          "commit": {
            "abbreviatedOid": "8d1687d"
          },
          "author": "steven-bellock",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-19T17:31:45Z",
          "updatedAt": "2025-09-19T17:33:52Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThis section covers generic use cases that demonstrate Multi Verifier applicability, independent of specific solutions.\r\n```",
              "createdAt": "2025-09-19T17:31:46Z",
              "updatedAt": "2025-09-19T17:33:52Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nWhen such a Verifier operates, it needs to interact with other Verifiers and hence needs to understand the topology and information exchange, for example to receive partial Evidence, specific to the relevant component or convey partial Attestation Results for the component.\r\n```",
              "createdAt": "2025-09-19T17:33:18Z",
              "updatedAt": "2025-09-19T17:33:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C9hR3",
          "commit": {
            "abbreviatedOid": "ea7f8ae"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T08:41:34Z",
          "updatedAt": "2025-09-26T08:41:34Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nHowever, the Verifier for each type of component may be deployed by each vendor separately, and these vendors may prefer to keep the Attestation Verification inputs or the Verification algorithm separate and isolated from other Verifiers in the eco-system, due to business concerns, such as complexity or cost.\r\n```",
              "createdAt": "2025-09-26T08:41:34Z",
              "updatedAt": "2025-09-26T08:41:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C9qA2",
          "commit": {
            "abbreviatedOid": "ea7f8ae"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T08:48:41Z",
          "updatedAt": "2025-09-26T08:48:41Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nWhen these Verifiers operate in concert, they need to interact with each other and hence needs to understand the topology and need to inter work using standardised protocols, for example to receive partial Evidence, specific to the relevant component or convey partial Attestation Results for the component.\r\n```",
              "createdAt": "2025-09-26T08:48:41Z",
              "updatedAt": "2025-09-26T08:49:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C9r4R",
          "commit": {
            "abbreviatedOid": "ea7f8ae"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T08:50:18Z",
          "updatedAt": "2025-09-26T08:50:19Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nAttester: A Device having multiple components\r\n```",
              "createdAt": "2025-09-26T08:50:18Z",
              "updatedAt": "2025-09-26T08:50:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C9sr8",
          "commit": {
            "abbreviatedOid": "ea7f8ae"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T08:51:01Z",
          "updatedAt": "2025-09-26T08:51:01Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nRelying Party: An entity which is making trust decisions for such an Attester\r\n```",
              "createdAt": "2025-09-26T08:51:01Z",
              "updatedAt": "2025-09-26T08:51:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C9wxk",
          "commit": {
            "abbreviatedOid": "0cf3e57"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T08:54:12Z",
          "updatedAt": "2025-09-26T08:54:12Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nConfidential Computing is becoming increasingly important as organisations move more workloads into untrusted or shared environments. In such a system the application or workload (could be an AI model, database process, financial service, etc.) is executed inside a TEE-protected VM. When the workload starts, the TEE generates a cryptographic attestation report providing:\r\n```",
              "createdAt": "2025-09-26T08:54:12Z",
              "updatedAt": "2025-09-26T08:54:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C90rZ",
          "commit": {
            "abbreviatedOid": "0cf3e57"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T08:57:29Z",
          "updatedAt": "2025-09-26T08:57:29Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\n1. The workload is running on a platform with a known state.\r\n2. The workload is running correct application.",
              "createdAt": "2025-09-26T08:57:29Z",
              "updatedAt": "2025-09-26T08:57:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C9_6V",
          "commit": {
            "abbreviatedOid": "4e7dc96"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T09:05:18Z",
          "updatedAt": "2025-09-26T09:05:18Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nFor example, either to speed up the processing or to assist in AI Inference. The trustworthiness assessment of the Device requires trust in all these individual components.\r\n```",
              "createdAt": "2025-09-26T09:05:18Z",
              "updatedAt": "2025-09-26T09:05:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C-CwQ",
          "commit": {
            "abbreviatedOid": "8460571"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T09:07:07Z",
          "updatedAt": "2025-09-26T09:07:07Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nA typical Device contains not only a traditional Central Processing Unit (CPU), but also heterogeneous acceleration components (GPU, NPU, TPU, etc) from different suppliers, to acheive a specific purpose.\r\n```",
              "createdAt": "2025-09-26T09:07:07Z",
              "updatedAt": "2025-09-26T09:07:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C-ABG",
          "commit": {
            "abbreviatedOid": "096f567"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-09-26T09:05:22Z",
          "updatedAt": "2025-09-26T09:10:22Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "2. The workload is running correct application(s).",
              "createdAt": "2025-09-26T09:05:22Z",
              "updatedAt": "2025-09-26T09:10:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C-J72",
          "commit": {
            "abbreviatedOid": "096f567"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-09-26T09:12:00Z",
          "updatedAt": "2025-09-26T09:12:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s7C-BuK",
          "commit": {
            "abbreviatedOid": "096f567"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T09:06:33Z",
          "updatedAt": "2025-09-26T09:15:34Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nThis section covers generic use cases that demonstrate the applicability of Multi Verifier, regardless of specific solutions.\r\nIts purpose is to motivate various aspects of the architecture presented in this document.\r\nThere are many other use cases; this document does not contain a complete list.\r\n```",
              "createdAt": "2025-09-26T09:06:33Z",
              "updatedAt": "2025-09-26T09:15:34Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nA device may contain a central processing unit (CPU), as well as heterogeneous acceleration components (such as GPUs, NPUs and TPUs) from different suppliers.\r\n\r\nThese components can be used to speed up processing or assist with AI inference.\r\nTrustworthiness assessment of the device requires trust in all of these components.\r\nHowever, due to business concerns such as scalability, complexity and cost of infrastructure, the Verifier for each type of component may be deployed separately by each vendor.\r\n\r\nWhen these Verifiers operate together, they must interact with each other, understand the topology and interoperate using standardised protocols.\r\nFor instance, they may need to exchange partial Evidence relating to the relevant component or partial Attestation Results for it.\r\n```",
              "createdAt": "2025-09-26T09:15:20Z",
              "updatedAt": "2025-09-26T09:17:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C-Vn-",
          "commit": {
            "abbreviatedOid": "096f567"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T09:20:21Z",
          "updatedAt": "2025-09-26T09:20:22Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\n2. The workload is running correct application(s).\r\n```",
              "createdAt": "2025-09-26T09:20:22Z",
              "updatedAt": "2025-09-26T09:20:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C-YPc",
          "commit": {
            "abbreviatedOid": "096f567"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T09:22:16Z",
          "updatedAt": "2025-09-26T09:22:17Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nRelying Party: An entity which is making trust decisions, such as a key release to a workload\r\n```",
              "createdAt": "2025-09-26T09:22:16Z",
              "updatedAt": "2025-09-26T09:22:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C-b_8",
          "commit": {
            "abbreviatedOid": "5ef2c3c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T09:24:52Z",
          "updatedAt": "2025-09-26T09:25:28Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nAs organisations move more workloads into untrusted or shared environments, Confidential Computing is becoming increasingly important.\r\nIn such a system, an application or workload (which could be an AI model, database process or financial service, for example) is executed inside a TEE-protected virtual machine (VM).\r\nWhen the workload starts, the TEE can generate a cryptographic attestation report providing:\r\n\r\n1. The workload is running on a platform with a known state.\r\n2. The workload is running the correct application.\r\n\r\nThe platform is often built by an independent TEE vendor, while the workloads are deployed by workload owners from different parts of the supply chain.\r\n\r\nVerification of Attestation for such a system requires independent, yet mutually coordinated, verification of: Platform claims appraised by a Platform Verifier and Workload claims appraised by a Workload Verifier.\r\n```",
              "createdAt": "2025-09-26T09:24:52Z",
              "updatedAt": "2025-09-26T09:25:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7C-g6z",
          "commit": {
            "abbreviatedOid": "54b6e74"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-09-26T09:28:15Z",
          "updatedAt": "2025-09-26T09:28:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDON24c9s6p5RQy",
      "title": "Clarify scope only to Architecture",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/32",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-09-22T17:09:50Z",
      "updatedAt": "2025-10-09T16:59:15Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "2e78cc8c027ca2437b9b87183f30c9721336c760",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "scope-clarification",
      "headRefOid": "ace40ca87e1be38ccfd981b68fc2893c2f974dac",
      "closedAt": "2025-10-09T16:59:15Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR is no longer relevant. See PR #39 ",
          "createdAt": "2025-10-09T16:59:15Z",
          "updatedAt": "2025-10-09T16:59:15Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7B9hoS",
          "commit": {
            "abbreviatedOid": "d085c07"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-22T17:10:20Z",
          "updatedAt": "2025-09-22T17:10:20Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIETF RATS Architecture, defines the key role of a Verifier.  In a system, with multiple components from different suppliers, this role needs to be performed by multiple Verifiers coordinating together to assess the full trustworthiness of an Attester. This document focuses on various topological patterns for a multiple Verifier system.\r\n```",
              "createdAt": "2025-09-22T17:10:20Z",
              "updatedAt": "2025-09-22T17:10:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDON24c9s6rQ_kD",
      "title": "Update draft-deshpande-rats-multi-verifier.md",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/34",
      "state": "OPEN",
      "author": "GhadaArf",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "minor change to test the tool",
      "createdAt": "2025-09-30T08:07:20Z",
      "updatedAt": "2025-09-30T09:00:00Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "test",
      "baseRefOid": "576278727c18dd5175ea6fef478ad1f865cf10f7",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "test-1",
      "headRefOid": "fb021a6f4100c1e279e9228e8fe8d186aacfc6e5",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Welcome @GhadaArf to the Editors panel!",
          "createdAt": "2025-09-30T09:00:00Z",
          "updatedAt": "2025-09-30T09:00:00Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7Dsobr",
          "commit": {
            "abbreviatedOid": "fb021a6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-30T08:33:02Z",
          "updatedAt": "2025-09-30T08:33:02Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nA Verifier plays a central role in any Remote Attestation System. A Verifier appraises the Evidence about the Attester and produces Attestation Results, which is essentially a verdict of attestation. The results are consumed by the Relying Party to conclude the trustworthiness of the Attester, before making any critical decisions about the Attester, such as admitting it to the network or releasing confidential resources to it.\r\n```",
              "createdAt": "2025-09-30T08:33:02Z",
              "updatedAt": "2025-09-30T08:33:02Z"
            }
          ]
        }
      ]
    },
    {
      "number": 35,
      "id": "PR_kwDON24c9s6rSG_g",
      "title": "Update draft-deshpande-rats-multi-verifier.md -- Abstract",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/35",
      "state": "CLOSED",
      "author": "GhadaArf",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need to specify the scope of the draft (architecture and conceptual messages) and what is out of the scope (e.g., used protocols between the verifiers).",
      "createdAt": "2025-09-30T09:26:41Z",
      "updatedAt": "2025-09-30T09:41:31Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "576278727c18dd5175ea6fef478ad1f865cf10f7",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "GhadaArf-Abstract",
      "headRefOid": "db7727b7119de2f052459ed6b4a681defcadeed1",
      "closedAt": "2025-09-30T09:41:31Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 36,
      "id": "PR_kwDON24c9s6rSepF",
      "title": "Abstract Update ",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/36",
      "state": "OPEN",
      "author": "GhadaArf",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need to specify the scope of the draft (architecture and conceptual messages) and what is out of the scope (e.g., used protocols between the verifiers).",
      "createdAt": "2025-09-30T09:47:09Z",
      "updatedAt": "2025-09-30T10:02:52Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "576278727c18dd5175ea6fef478ad1f865cf10f7",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "Abstract",
      "headRefOid": "db7727b7119de2f052459ed6b4a681defcadeed1",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you for proposing a change, please feel free to check\r\nissue https://github.com/ietf-rats/draft-deshpande-multi-verifier/issues/30\r\n\r\nand look for further changes, then we can discuss this in our meeting on Froday 03rd October!",
          "createdAt": "2025-09-30T10:02:52Z",
          "updatedAt": "2025-09-30T10:02:52Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 37,
      "id": "PR_kwDON24c9s6sPJLU",
      "title": "update the security and privacy consideration",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/37",
      "state": "OPEN",
      "author": "junzhanghw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-10-06T10:37:59Z",
      "updatedAt": "2025-10-09T15:43:37Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "576278727c18dd5175ea6fef478ad1f865cf10f7",
      "headRepository": "junzhanghw/draft-deshpande-multi-verifier",
      "headRefName": "junzhanghw-patch-security-privacy-consideration",
      "headRefOid": "34cfb4c99592651127e027f0644062bda951b43f",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7FyvV0",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T11:04:40Z",
          "updatedAt": "2025-10-09T11:04:41Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe Verifier is effectively part of the Attesters' and Relying Parties' trusted computing base (TCB).  When multiple Verifiers coordinate to conduct appraisal, it leads to larger TCB and hence more attack surface. Any mistake in the appraisal procedure conducted by one or more Verifiers could have severe security implications, leading to unauthorized access or data breaches. This section details the security threats and mitigation strategies specific to the multi-verifier topologies described in this document. In addition to the considerations herein, Verifiers MUST follow the guidance detailed in the Security and Privacy considerations of a RATS Verifier as detailed in {{Section 11 of -corim}} and the RATS Architecture {{Section 11 and Section 12 of -rats-arch}}.\r\n```",
              "createdAt": "2025-10-09T11:04:40Z",
              "updatedAt": "2025-10-09T11:05:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7FywsR",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T11:06:30Z",
          "updatedAt": "2025-10-09T11:06:30Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n1. Eavesdrop on any communication channel between Verifiers.\r\n```",
              "createdAt": "2025-10-09T11:06:30Z",
              "updatedAt": "2025-10-09T11:06:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7Fyw_t",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T11:06:53Z",
          "updatedAt": "2025-10-09T11:06:53Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n4. Perform Man-in-the-Middle (MitM) attacks between any two communicating entities.\r\n```",
              "createdAt": "2025-10-09T11:06:53Z",
              "updatedAt": "2025-10-09T11:07:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7Fyzda",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T11:09:46Z",
          "updatedAt": "2025-10-09T11:09:46Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Change SV => Sub Verifier to Component Verifier : CV",
              "createdAt": "2025-10-09T11:09:46Z",
              "updatedAt": "2025-10-09T11:09:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7FzBxU",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "some comments to look at!\r\n\r\nStill in the middle of the review!",
          "createdAt": "2025-10-09T11:23:32Z",
          "updatedAt": "2025-10-09T11:23:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s7F0XRA",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T12:55:09Z",
          "updatedAt": "2025-10-09T12:55:09Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "ok. All corresponding parts should be modified.",
              "createdAt": "2025-10-09T12:55:09Z",
              "updatedAt": "2025-10-09T12:55:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F2dGc",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T14:53:53Z",
          "updatedAt": "2025-10-09T14:54:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s7F2dQV",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T14:54:06Z",
          "updatedAt": "2025-10-09T14:54:10Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Confidentiality of Evidence - should be part of Privacy Section",
              "createdAt": "2025-10-09T14:54:06Z",
              "updatedAt": "2025-10-09T14:54:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F2eU5",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T14:55:39Z",
          "updatedAt": "2025-10-09T14:55:39Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nThe cascaded pattern distributes trust but requires each Verifier in the chain to be trusted to correctly handle and forward  Attestation messages. The chain's security is only as strong as its weakest link.\r\n```",
              "createdAt": "2025-10-09T14:55:39Z",
              "updatedAt": "2025-10-09T14:55:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F2gB5",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T14:57:24Z",
          "updatedAt": "2025-10-09T14:57:24Z",
          "comments": [
            {
              "originalPosition": 101,
              "body": "The last line of Encryption should be all part of Privacy",
              "createdAt": "2025-10-09T14:57:24Z",
              "updatedAt": "2025-10-09T14:57:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F2ik2",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:00:19Z",
          "updatedAt": "2025-10-09T15:00:22Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "```suggestion\r\nAs the hybrid pattern is the composition of  hierarchical pattern and cascade pattern, all the threats and mitigations that are applicable for these two patterns are also applicable for the general hybrid pattern.\r\n```",
              "createdAt": "2025-10-09T15:00:19Z",
              "updatedAt": "2025-10-09T15:00:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F2l4-",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:05:28Z",
          "updatedAt": "2025-10-09T15:05:30Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "```suggestion\r\nThe appraisal of a Composite Attester requires exchange of attestation related messages, for example, partial Evidence and partial Attestation Results, among multiple Verifiers. This can potentially leak sensitive information about the Attester's configuration , identities and the nature of composition.\r\n```",
              "createdAt": "2025-10-09T15:05:28Z",
              "updatedAt": "2025-10-09T15:05:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F2mex",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:06:22Z",
          "updatedAt": "2025-10-09T15:06:22Z",
          "comments": [
            {
              "originalPosition": 127,
              "body": "Move all the confidentiality aspect into Privacy considerations.",
              "createdAt": "2025-10-09T15:06:22Z",
              "updatedAt": "2025-10-09T15:06:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F2nMM",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:07:30Z",
          "updatedAt": "2025-10-09T15:07:30Z",
          "comments": [
            {
              "originalPosition": 128,
              "body": "```suggestion\r\n- Policy Handling: Verifiers should be careful not to leak their internal appraisal policies (e.g., through error messages or timing side channels) when communicating with other Verifiers or Attesters, as this information could be exploited by an attacker to manipulate appraisal.\r\n```",
              "createdAt": "2025-10-09T15:07:30Z",
              "updatedAt": "2025-10-09T15:07:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F2n-5",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thank you Jun for making efforts to segregate the sections.\r\nPlease see some comments. I will request others to review as well.,\r\n\r\nIt is certainly a good start!",
          "createdAt": "2025-10-09T15:08:46Z",
          "updatedAt": "2025-10-09T15:08:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s7F3D5x",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:39:02Z",
          "updatedAt": "2025-10-09T15:39:02Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "ok for me.",
              "createdAt": "2025-10-09T15:39:02Z",
              "updatedAt": "2025-10-09T15:39:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F3EZN",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:39:30Z",
          "updatedAt": "2025-10-09T15:39:31Z",
          "comments": [
            {
              "originalPosition": 127,
              "body": "ok for me",
              "createdAt": "2025-10-09T15:39:30Z",
              "updatedAt": "2025-10-09T15:39:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F3GFy",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:41:06Z",
          "updatedAt": "2025-10-09T15:41:07Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "this is to guarantee the integrity. so it should be remained inside the security consideration.",
              "createdAt": "2025-10-09T15:41:06Z",
              "updatedAt": "2025-10-09T15:41:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F3HQQ",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:42:09Z",
          "updatedAt": "2025-10-09T15:42:09Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "ok for me.",
              "createdAt": "2025-10-09T15:42:09Z",
              "updatedAt": "2025-10-09T15:42:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F3ICJ",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:42:46Z",
          "updatedAt": "2025-10-09T15:42:46Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "ok for me.",
              "createdAt": "2025-10-09T15:42:46Z",
              "updatedAt": "2025-10-09T15:42:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7F3JYo",
          "commit": {
            "abbreviatedOid": "34cfb4c"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-09T15:43:36Z",
          "updatedAt": "2025-10-09T15:43:37Z",
          "comments": [
            {
              "originalPosition": 101,
              "body": "I agree with that.",
              "createdAt": "2025-10-09T15:43:36Z",
              "updatedAt": "2025-10-09T15:43:37Z"
            }
          ]
        }
      ]
    },
    {
      "number": 38,
      "id": "PR_kwDON24c9s6s76br",
      "title": "Section heading fix",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/38",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This change fixes a rendering bug in the Heading of Cascaded Pattern",
      "createdAt": "2025-10-09T16:47:07Z",
      "updatedAt": "2025-10-10T08:29:53Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "576278727c18dd5175ea6fef478ad1f865cf10f7",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "remove-section-bug",
      "headRefOid": "a13391d68f2ccdc8261c1f418f1d2a7027c2a6e2",
      "closedAt": "2025-10-10T08:29:50Z",
      "mergedAt": "2025-10-10T08:29:50Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "4e3d30fb0ff342e140e2a33b5c8a45a74f58b83d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7F_Ded",
          "commit": {
            "abbreviatedOid": "a13391d"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-10-10T06:59:50Z",
          "updatedAt": "2025-10-10T06:59:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 39,
      "id": "PR_kwDON24c9s6s8BvQ",
      "title": "Introduce Scope right at the start",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/39",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-10-09T16:58:28Z",
      "updatedAt": "2025-10-10T09:08:23Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "576278727c18dd5175ea6fef478ad1f865cf10f7",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "scope-define",
      "headRefOid": "f34159387af4547f188c91d01828c5019608b026",
      "closedAt": "2025-10-10T09:08:18Z",
      "mergedAt": "2025-10-10T09:08:18Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "fdab2c27a1ec753c5b22ab2d8156b204af37b3e4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7F_EP0",
          "commit": {
            "abbreviatedOid": "f65e79e"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-10-10T07:01:06Z",
          "updatedAt": "2025-10-10T07:01:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s7F_Efs",
          "commit": {
            "abbreviatedOid": "f65e79e"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-10-10T07:01:32Z",
          "updatedAt": "2025-10-10T07:01:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s7GA2rj",
          "commit": {
            "abbreviatedOid": "f65e79e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-10T09:06:16Z",
          "updatedAt": "2025-10-10T09:06:16Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIETF RATS Architecture, defines the key role of a Verifier.  In a complex system, this role needs to be performed by multiple Verfiers coordinating together to assess the full trustworthiness of an Attester. This document focuses on various topological patterns for a multiple Verifier system. It only covers the architectural aspects introduced by the Multi Verifier concept, which is neutral with regard to specific wire formats, encoding, transport mechanisms, or processing details.\r\n```",
              "createdAt": "2025-10-10T09:06:16Z",
              "updatedAt": "2025-10-10T09:06:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7GA4Cx",
          "commit": {
            "abbreviatedOid": "f341593"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-10-10T09:07:56Z",
          "updatedAt": "2025-10-10T09:07:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 40,
      "id": "PR_kwDON24c9s6tUw7E",
      "title": "Add Steven and Ghada as Contributors",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/40",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-10-12T15:51:10Z",
      "updatedAt": "2025-10-13T10:27:12Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "fdab2c27a1ec753c5b22ab2d8156b204af37b3e4",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "add-contributors",
      "headRefOid": "608e560dbf32044c94333c748be7fc49a2c7d497",
      "closedAt": "2025-10-13T10:27:08Z",
      "mergedAt": "2025-10-13T10:27:08Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "1c3a95e42c2a0e2d94b5d6ae3e5e8ae6460c0034"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7Gf_sr",
          "commit": {
            "abbreviatedOid": "608e560"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-10-13T07:27:38Z",
          "updatedAt": "2025-10-13T07:27:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 41,
      "id": "PR_kwDON24c9s6tcUT8",
      "title": "Add Acknowledgements",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/41",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Acknowledge people who have spent some time and reviewed the document and shared some useful insights!",
      "createdAt": "2025-10-13T11:26:24Z",
      "updatedAt": "2025-10-15T12:22:41Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "182f3223d47205e8f6a5c0f5355afebe13b17380",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "add-acknowledgments",
      "headRefOid": "28bdf2c974f7d2f416df26df1c59f0589d7dba5a",
      "closedAt": "2025-10-15T12:22:37Z",
      "mergedAt": "2025-10-15T12:22:37Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "211fc760ec3f7b13d8915ed4157841eadae9a2c7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7Gv51D",
          "commit": {
            "abbreviatedOid": "5435a8d"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-10-14T08:19:44Z",
          "updatedAt": "2025-10-14T08:19:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s7GxEVP",
          "commit": {
            "abbreviatedOid": "44ea4b0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-14T09:42:04Z",
          "updatedAt": "2025-10-14T09:42:04Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nSimon Frost\r\nand\r\nUsama Sardar\r\n```",
              "createdAt": "2025-10-14T09:42:04Z",
              "updatedAt": "2025-10-14T09:42:04Z"
            }
          ]
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDON24c9s6tdJ9L",
      "title": "Add Trust Anchor definition",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/42",
      "state": "MERGED",
      "author": "GhadaArf",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Issue #30",
      "createdAt": "2025-10-13T12:38:10Z",
      "updatedAt": "2025-10-13T13:26:09Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "1c3a95e42c2a0e2d94b5d6ae3e5e8ae6460c0034",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "Add-Trust-Anchor-definition",
      "headRefOid": "93abbbcf937b788ca5250a819f67cf851de8e58e",
      "closedAt": "2025-10-13T13:21:30Z",
      "mergedAt": "2025-10-13T13:21:30Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "182f3223d47205e8f6a5c0f5355afebe13b17380"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@GhadaArf This needs properly formatting, please see \r\nhttps://github.com/ietf-rats-wg/draft-ietf-rats-corim\r\n\r\nFor the references addition..\r\n\r\nHow we add normative references and referring them.",
          "createdAt": "2025-10-13T13:10:32Z",
          "updatedAt": "2025-10-13T13:10:32Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you @GhadaArf for making the changes!",
          "createdAt": "2025-10-13T13:21:26Z",
          "updatedAt": "2025-10-13T13:21:26Z"
        },
        {
          "author": "GhadaArf",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @henkbirkholz for the help! ",
          "createdAt": "2025-10-13T13:26:09Z",
          "updatedAt": "2025-10-13T13:26:09Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7GkmqR",
          "commit": {
            "abbreviatedOid": "e74b2aa"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-13T12:44:15Z",
          "updatedAt": "2025-10-13T12:44:16Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I think, either you move this to a place where Trust Anchor is used, for the first time in this document\r\nOR\r\nYou can just add a reference to RFC 6024 in the list of References and refer to it from first use of Trust Anchor!",
              "createdAt": "2025-10-13T12:44:15Z",
              "updatedAt": "2025-10-13T12:44:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7Gkm3u",
          "commit": {
            "abbreviatedOid": "e74b2aa"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "please see some comment",
          "createdAt": "2025-10-13T12:44:31Z",
          "updatedAt": "2025-10-13T12:44:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDON24c9s7Gk1dP",
          "commit": {
            "abbreviatedOid": "e74b2aa"
          },
          "author": "GhadaArf",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-10-13T12:59:06Z",
          "updatedAt": "2025-10-13T12:59:07Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I opted for the second option ",
              "createdAt": "2025-10-13T12:59:06Z",
              "updatedAt": "2025-10-13T12:59:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON24c9s7GlHAb",
          "commit": {
            "abbreviatedOid": "93abbbc"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2025-10-13T13:20:38Z",
          "updatedAt": "2025-10-13T13:20:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDON24c9s6tdzXd",
      "title": "Bug Fix in Rendering",
      "url": "https://github.com/ietf-rats/draft-deshpande-multi-verifier/pull/43",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-10-13T13:32:08Z",
      "updatedAt": "2025-10-14T08:27:27Z",
      "baseRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "baseRefName": "main",
      "baseRefOid": "182f3223d47205e8f6a5c0f5355afebe13b17380",
      "headRepository": "ietf-rats/draft-deshpande-multi-verifier",
      "headRefName": "bug-fix",
      "headRefOid": "fa323a214f23362ebdd4ef047dda635a53f628d1",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON24c9s7GwBd2",
          "commit": {
            "abbreviatedOid": "fa323a2"
          },
          "author": "junzhanghw",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-10-14T08:27:27Z",
          "updatedAt": "2025-10-14T08:27:27Z",
          "comments": []
        }
      ]
    }
  ]
}